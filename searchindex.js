Search.setIndex({"alltitles": {"Abstract": [[23, null]], "Alignment Methods": [[0, "alignment-methods"]], "Anaconda (Preferred)": [[80, "anaconda-preferred"]], "Basic Usage": [[80, "basic-usage"]], "Constructors": [[23, "constructors"], [33, null], [36, null]], "Data Simulation": [[0, "data-simulation"]], "ETSpy": [[80, null]], "Enum Values": [[1, null]], "Example Datasets": [[0, "example-datasets"]], "Examples": [[79, null]], "File I/O": [[0, "file-i-o"]], "General Information": [[0, null]], "Installation": [[80, "installation"]], "Methods": [[1, "methods"], [23, "methods"], [33, "methods"], [36, "methods"]], "Note": [[0, null]], "Optional Jupyter components (higly recommended)": [[80, "optional-jupyter-components-higly-recommended"]], "Reconstruction": [[0, "reconstruction"]], "Related projects": [[80, "related-projects"]], "Removal": [[80, "removal"]], "Signals": [[0, "signals"]], "Tip": [[0, null], [0, null]], "Using pip": [[80, "using-pip"]], "Utilities": [[0, "utilities"]]}, "docurls": ["api.html", "api/etspy.AlignmentMethod.html", "api/etspy.AlignmentMethod.COM.html", "api/etspy.AlignmentMethod.COM_CL.html", "api/etspy.AlignmentMethod.PC.html", "api/etspy.AlignmentMethod.STACK_REG.html", "api/etspy.AlignmentMethod.is_valid_value.html", "api/etspy.AlignmentMethod.values.html", "api/etspy.align.align_stack.html", "api/etspy.align.align_to_other.html", "api/etspy.align.apply_shifts.html", "api/etspy.align.calc_shifts_cl.html", "api/etspy.align.calc_shifts_com_cl.html", "api/etspy.align.calculate_shifts_com.html", "api/etspy.align.calculate_shifts_conservation_of_mass.html", "api/etspy.align.calculate_shifts_pc.html", "api/etspy.align.calculate_shifts_stackreg.html", "api/etspy.align.get_best_slices.html", "api/etspy.align.get_coms.html", "api/etspy.align.pad_line.html", "api/etspy.align.shift_crop.html", "api/etspy.align.tilt_com.html", "api/etspy.align.tilt_maximage.html", "api/etspy.base.CommonStack.html", "api/etspy.base.CommonStack.__init__.html", "api/etspy.base.CommonStack.change_data_type.html", "api/etspy.base.CommonStack.invert.html", "api/etspy.base.CommonStack.normalize.html", "api/etspy.base.CommonStack.plot.html", "api/etspy.base.CommonStack.save_movie.html", "api/etspy.base.CommonStack.save_raw.html", "api/etspy.base.CommonStack.stats.html", "api/etspy.base.CommonStack.trans_stack.html", "api/etspy.base.RecStack.html", "api/etspy.base.RecStack.__init__.html", "api/etspy.base.RecStack.plot_slices.html", "api/etspy.base.TomoStack.html", "api/etspy.base.TomoStack.__init__.html", "api/etspy.base.TomoStack.align_other.html", "api/etspy.base.TomoStack.filter.html", "api/etspy.base.TomoStack.manual_align.html", "api/etspy.base.TomoStack.plot_sinos.html", "api/etspy.base.TomoStack.recon_error.html", "api/etspy.base.TomoStack.reconstruct.html", "api/etspy.base.TomoStack.remove_projections.html", "api/etspy.base.TomoStack.set_tilts.html", "api/etspy.base.TomoStack.stack_register.html", "api/etspy.base.TomoStack.test_align.html", "api/etspy.base.TomoStack.test_correlation.html", "api/etspy.base.TomoStack.tilt_align.html", "api/etspy.datasets.get_catalyst_data.html", "api/etspy.datasets.get_needle_data.html", "api/etspy.io.MismatchedTiltError.html", "api/etspy.io.create_stack.html", "api/etspy.io.get_dm_tilts.html", "api/etspy.io.get_mrc_tilts.html", "api/etspy.io.load.html", "api/etspy.io.load_serialem.html", "api/etspy.io.load_serialem_series.html", "api/etspy.io.parse_mdoc.html", "api/etspy.io.parse_mrc_header.html", "api/etspy.recon.astra_error.html", "api/etspy.recon.dart_segment.html", "api/etspy.recon.get_dart_boundaries.html", "api/etspy.recon.run.html", "api/etspy.recon.run_alg.html", "api/etspy.recon.run_dart.html", "api/etspy.simulation.add_noise.html", "api/etspy.simulation.create_catalyst_model.html", "api/etspy.simulation.create_cylinder_model.html", "api/etspy.simulation.create_model_tilt_series.html", "api/etspy.simulation.misalign_stack.html", "api/etspy.utils.calc_est_angles.html", "api/etspy.utils.calc_golden_ratio_angles.html", "api/etspy.utils.filter_stack.html", "api/etspy.utils.get_radial_mask.html", "api/etspy.utils.multiaverage.html", "api/etspy.utils.register_serialem_stack.html", "api/etspy.utils.weight_stack.html", "examples.html", "index.html"], "envversion": {"sphinx": 63, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1}, "indexentries": {}, "objects": {"etspy": [[1, 0, 1, "", "AlignmentMethod", "Allowed values for the stack alignment method."]], "etspy.AlignmentMethod": [[2, 1, 1, "", "COM", "Center of Mass method"], [3, 1, 1, "", "COM_CL", "Center of Mass with Common Line method"], [4, 1, 1, "", "PC", "Phase correlation method"], [5, 1, 1, "", "STACK_REG", "Stack Registration method"], [6, 2, 1, "", "is_valid_value", "Test if value is contained in the AlignmentMethod enum."], [7, 2, 1, "", "values", "Calculate a list of allowed values in the AlignmentMethod enum."]], "etspy.AlignmentMethod.is_valid_value": [[6, 3, 2, "", "value", "Test if value is contained in the AlignmentMethod enum."]], "etspy.align": [[8, 4, 1, "", "align_stack", "Compute the shifts for spatial registration."], [9, 4, 1, "", "align_to_other", "Spatially register a TomoStack using previously calculated shifts."], [10, 4, 1, "", "apply_shifts", "Apply a series of shifts to a TomoStack."], [11, 4, 1, "", "calc_shifts_cl", "Calculate shifts using the common line method."], [12, 4, 1, "", "calc_shifts_com_cl", "Calculate shifts using combined center of mass and common line methods."], [13, 4, 1, "", "calculate_shifts_com", "Align stack using a center of mass method."], [14, 4, 1, "", "calculate_shifts_conservation_of_mass", "Calculate shifts parallel to the tilt axis using conservation of mass."], [15, 4, 1, "", "calculate_shifts_pc", "Calculate shifts using the phase correlation algorithm."], [16, 4, 1, "", "calculate_shifts_stackreg", "Calculate shifts using PyStackReg."], [17, 4, 1, "", "get_best_slices", "Get best nslices for center of mass analysis."], [18, 4, 1, "", "get_coms", "Calculate the center of mass for indicated slices."], [19, 4, 1, "", "pad_line", "Pad a 1D array for FFT treatment without altering center location."], [20, 4, 1, "", "shift_crop", "Crop shifted stack to common area."], [21, 4, 1, "", "tilt_com", "Perform tilt axis alignment using center of mass (CoM) tracking."], [22, 4, 1, "", "tilt_maximage", "Perform automated determination of the tilt axis of a TomoStack."]], "etspy.align.align_stack": [[8, 3, 2, "p-cl_div_factor", "cl_div_factor", "(Only used when method ==COM_CL) Factor which determines the number of iterations of common line alignment to perform."], [8, 3, 2, "p-cl_ref_index", "cl_ref_index", "(Only used when method ==COM_CL) Reference slice for common line alignment."], [8, 3, 2, "p-cl_resolution", "cl_resolution", "(Only used when method ==COM_CL) Resolution for subpixel common line alignment."], [8, 3, 2, "p-com_ref_index", "com_ref_index", "(Only used when method ==COM_CL) Reference slice for center of mass alignment."], [8, 3, 2, "p-cuda", "cuda", "(Only used when method ==PC) Enable/disable the use of GPU-accelerated processes using CUDA."], [8, 3, 2, "p-method", "method", "Method by which to calculate the alignments."], [8, 3, 2, "p-nslices", "nslices", "(Only used when method ==COM) Number of slices to return."], [8, 3, 2, "p-p", "p", "(Only used when method ==COM) Padding element."], [8, 3, 2, "p-show_progressbar", "show_progressbar", "Enable/disable progress bar"], [8, 3, 2, "p-stack", "stack", "3-D numpy array containing the tilt series data"], [8, 3, 2, "p-start", "start", "Position in tilt series to use as starting point for the alignment. If None, the central projection is used."], [8, 3, 2, "p-upsample_factor", "upsample_factor", "(Only used when method ==PC) Factor by which to resample the data."], [8, 3, 2, "p-xrange", "xrange", "(Only used when method ==COM) The range for performing alignment."]], "etspy.align.align_to_other": [[9, 3, 2, "p-other", "other", "TomoStack to be aligned."], [9, 3, 2, "p-stack", "stack", "TomoStack which was previously aligned"]], "etspy.align.apply_shifts": [[10, 3, 2, "p-shifts", "shifts", "The X- and Y-shifts to be applied to each image"], [10, 3, 2, "p-stack", "stack", "The image series to be aligned"]], "etspy.align.calc_shifts_cl": [[11, 3, 2, "p-cl_div_factor", "cl_div_factor", "Factor used to determine number of iterations of alignment."], [11, 3, 2, "p-cl_ref_index", "cl_ref_index", "Tilt index of reference projection."], [11, 3, 2, "p-cl_resolution", "cl_resolution", "Degree of sub-pixel analysis"], [11, 3, 2, "p-stack", "stack", "The stack on which to calculate shifts"]], "etspy.align.calc_shifts_com_cl": [[12, 3, 2, "p-cl_div_factor", "cl_div_factor", "Factor which determines the number of iterations of common line alignment to perform."], [12, 3, 2, "p-cl_ref_index", "cl_ref_index", "Reference slice for common line alignment."], [12, 3, 2, "p-cl_resolution", "cl_resolution", "Resolution for subpixel common line alignment."], [12, 3, 2, "p-com_ref_index", "com_ref_index", "Reference slice for center of mass alignment."], [12, 3, 2, "p-stack", "stack", "Tilt series to be aligned"]], "etspy.align.calculate_shifts_com": [[13, 3, 2, "p-nslices", "nslices", "Number of slices to return"], [13, 3, 2, "p-stack", "stack", "The image series to be aligned"]], "etspy.align.calculate_shifts_conservation_of_mass": [[14, 3, 2, "p-p", "p", "Padding element"], [14, 3, 2, "p-stack", "stack", "Tilt series to be aligned."], [14, 3, 2, "p-xrange", "xrange", "The range for performing alignment"]], "etspy.align.calculate_shifts_pc": [[15, 3, 2, "p-cuda", "cuda", "Enable/disable the use of GPU-accelerated processes using CUDA"], [15, 3, 2, "p-show_progressbar", "show_progressbar", "Enable/disable progress bar"], [15, 3, 2, "p-stack", "stack", "The image series to be aligned"], [15, 3, 2, "p-start", "start", "Position in tilt series to use as starting point for the alignment"], [15, 3, 2, "p-upsample_factor", "upsample_factor", "Factor by which to resample the data"]], "etspy.align.calculate_shifts_stackreg": [[16, 3, 2, "p-show_progressbar", "show_progressbar", "Enable/disable progress bar"], [16, 3, 2, "p-stack", "stack", "The image series to be aligned"], [16, 3, 2, "p-start", "start", "Position in tilt series to use as starting point for the alignment."]], "etspy.align.get_best_slices": [[17, 3, 2, "p-nslices", "nslices", "Number of slices to return"], [17, 3, 2, "p-stack", "stack", "Tilt series from which to select the best slices"]], "etspy.align.get_coms": [[18, 3, 2, "p-slices", "slices", "Location of slices to use for center of mass calculation."], [18, 3, 2, "p-stack", "stack", "Tilt series from which to calculate the centers of mass."]], "etspy.align.pad_line": [[19, 3, 2, "p-line", "line", "The data to be padded (should be 1D)"], [19, 3, 2, "p-paddedsize", "paddedsize", "The size of the desired padded data."]], "etspy.align.shift_crop": [[20, 3, 2, "p-stack", "stack", "TomoStack which was previously aligned"]], "etspy.align.tilt_com": [[21, 3, 2, "p-nslices", "nslices", "Nubmer of slices to use for the analysis (only used if the slices parameter is not specified)."], [21, 3, 2, "p-slices", "slices", "Locations at which to perform the Center of Mass analysis."], [21, 3, 2, "p-stack", "stack", "TomoStack containing the tilt series data"]], "etspy.align.tilt_maximage": [[22, 3, 2, "p-also_shift", "also_shift", "If True, also calculate and apply the global shift perpendicular to the tilt by minimizing the sum of the reconstruction"], [22, 3, 2, "p-delta", "delta", "Angular increment for calculation"], [22, 3, 2, "p-limit", "limit", "Maximum rotation angle to use for calculation"], [22, 3, 2, "p-plot_results", "plot_results", "If True, plot the maximum image along with the lines determined by Hough analysis"], [22, 3, 2, "p-shift_limit", "shift_limit", "The limit of shifts applied if also_shift is set to True"], [22, 3, 2, "p-stack", "stack", "TomoStack array containing the tilt series data"]], "etspy.base": [[23, 0, 1, "", "CommonStack", "An abstract base class for tomography data."], [33, 0, 1, "", "RecStack", "Create a RecStack instance, used to hold the results of a reconstructed volume."], [36, 0, 1, "", "TomoStack", "Create a TomoStack instance, used to represent tomographic tilt series data."]], "etspy.base.CommonStack": [[24, 2, 1, "", "__init__", "Create an ETSpy signal instance."], [25, 2, 1, "", "change_data_type", "Change the data type of a stack."], [26, 2, 1, "", "invert", "Create a copy of a Stack with inverted contrast levels."], [27, 2, 1, "", "normalize", "Create a copy of a stack with normalized contrast levels."], [28, 2, 1, "", "plot", "Override of plot function to set default HyperSpy navigator to 'slider'."], [29, 2, 1, "", "save_movie", "Save the Stack as an AVI movie file."], [30, 2, 1, "", "save_raw", "Save Stack data as a .raw/.rpl file pair."], [31, 2, 1, "", "stats", "Print some basic statistics about Stack data."], [32, 2, 1, "", "trans_stack", "Create a copy of a Stack, transformed using the skimage Affine transform."]], "etspy.base.CommonStack.__init__": [[24, 3, 2, "", "args", "Create an ETSpy signal instance."], [24, 3, 2, "", "kwargs", "Create an ETSpy signal instance."]], "etspy.base.CommonStack.change_data_type": [[25, 3, 2, "p-dtype", "dtype", "A string that represents a NumPy data type, or a specific data type"]], "etspy.base.CommonStack.normalize": [[27, 3, 2, "p-width", "width", "Number of standard deviations from the mean to set as maximum intensity level."]], "etspy.base.CommonStack.plot": [[28, 3, 2, "", "args", "Override of plot function to set default HyperSpy navigator to 'slider'."], [28, 3, 2, "", "kwargs", "Override of plot function to set default HyperSpy navigator to 'slider'."], [28, 3, 2, "", "navigator", "Override of plot function to set default HyperSpy navigator to 'slider'."]], "etspy.base.CommonStack.save_movie": [[29, 3, 2, "p-axis", "axis", "Projection axis for the output movie. Must be 'XY' (default), 'YZ' , or 'XZ'"], [29, 3, 2, "p-clim", "clim", "Upper and lower contrast limit to use for movie"], [29, 3, 2, "p-cmap", "cmap", "Matplotlib colormap to use for movie"], [29, 3, 2, "p-dpi", "dpi", "Resolution to save the images in the movie."], [29, 3, 2, "p-fps", "fps", "Number of frames per second at which to create the movie."], [29, 3, 2, "p-outfile", "outfile", "Filename for output."], [29, 3, 2, "p-start", "start", "Starting slice number for animation"], [29, 3, 2, "p-stop", "stop", "Ending slice number for animation"], [29, 3, 2, "p-title", "title", "Title to add at the top of the movie"]], "etspy.base.CommonStack.save_raw": [[30, 3, 2, "p-filename", "filename", "Name of file to receive data."]], "etspy.base.CommonStack.trans_stack": [[32, 3, 2, "p-angle", "angle", "Angle in degrees by which to rotate the stack about the X-Y plane"], [32, 3, 2, "p-interpolation", "interpolation", "Mode of interpolation to employ."], [32, 3, 2, "p-xshift", "xshift", "Number of pixels by which to shift in the X dimension"], [32, 3, 2, "p-yshift", "yshift", "Number of pixels by which to shift the stack in the Y dimension"]], "etspy.base.RecStack": [[34, 2, 1, "", "__init__", "Create a RecStack signal."], [35, 2, 1, "", "plot_slices", "Plot slices along all three axes of a reconstruction stack."]], "etspy.base.RecStack.__init__": [[34, 3, 2, "p-args", "args", "Additional non-keyword arguments passed to Signal2D"], [34, 3, 2, "p-kwargs", "kwargs", "Additional keyword arguments passed to Signal2D"]], "etspy.base.RecStack.plot_slices": [[35, 3, 2, "p-vmax_std", "vmax_std", "Number of standard deviations from mean to use for scaling the displayed slices"], [35, 3, 2, "p-vmin_std", "vmin_std", "Number of standard deviations from mean to use for scaling the displayed slices"], [35, 3, 2, "p-xslice", "xslice", "Indices of slices to plot."], [35, 3, 2, "p-yslice", "yslice", "Indices of slices to plot."], [35, 3, 2, "p-zslice", "zslice", "Indices of slices to plot."]], "etspy.base.TomoStack": [[37, 2, 1, "", "__init__", "Create a TomoStack signal."], [38, 2, 1, "", "align_other", "Apply the alignment calculated for one dataset to another."], [39, 2, 1, "", "filter", "Apply one of several image filters to an entire TomoStack."], [40, 2, 1, "", "manual_align", "Manually shift part of a stack with respect to another and return it as a copy."], [41, 2, 1, "", "plot_sinos", "Plot the TomoStack in sinogram orientation."], [42, 2, 1, "", "recon_error", "Determine the optimum number of iterations for reconstruction."], [43, 2, 1, "", "reconstruct", "Reconstruct a TomoStack series using one of the available methods."], [44, 2, 1, "", "remove_projections", "Return a copy of the TomoStack with certain projections removed from the series."], [45, 2, 1, "", "set_tilts", "Calibrate the tilt axis of the image stack."], [46, 2, 1, "", "stack_register", "Register stack spatially."], [47, 2, 1, "", "test_align", "Perform a reconstruction with limited slices for visual inspection."], [48, 2, 1, "", "test_correlation", "Test output of cross-correlation prior to alignment."], [49, 2, 1, "", "tilt_align", "Align the tilt axis of a TomoStack."]], "etspy.base.TomoStack.__init__": [[37, 3, 2, "p-args", "args", "Additional non-keyword arguments passed to Signal2D"], [37, 3, 2, "p-kwargs", "kwargs", "Additional keyword arguments passed to Signal2D"]], "etspy.base.TomoStack.align_other": [[38, 3, 2, "p-other", "other", "The tilt series which is to be aligned using the previously calculated parameters."]], "etspy.base.TomoStack.filter": [[39, 3, 2, "p-method", "method", "Type of filter to apply."], [39, 3, 2, "p-size", "size", "Size of filtering neighborhood."], [39, 3, 2, "p-taper", "taper", "Fraction of image size to pad to the mean."]], "etspy.base.TomoStack.manual_align": [[40, 3, 2, "p-display", "display", "If True, display the result."], [40, 3, 2, "p-nslice", "nslice", "Slice position at which to implement shift"], [40, 3, 2, "p-xshift", "xshift", "Number of pixels with which to shift the second portion of the stack relative to the first in the X dimension."], [40, 3, 2, "p-yshift", "yshift", "Number of pixels with which to shift the second portion of the stack relative to the first in the Y dimension."]], "etspy.base.TomoStack.plot_sinos": [[41, 3, 2, "p-args", "args", "Additional non-keyword arguments passed to plot()"], [41, 3, 2, "p-kwargs", "kwargs", "Additional keyword arguments passed to plot()"]], "etspy.base.TomoStack.recon_error": [[42, 3, 2, "p-algorithm", "algorithm", "Reconstruction algorithm use."], [42, 3, 2, "p-constrain", "constrain", "If True, perform SIRT reconstruction with a non-negativity constraint."], [42, 3, 2, "p-cuda", "cuda", "Whether or not to use CUDA-accelerated reconstruction algorithms."], [42, 3, 2, "", "iterations", "Determine the optimum number of iterations for reconstruction."], [42, 3, 2, "p-nslice", "nslice", "Slice location at which to perform the evaluation."], [42, 3, 2, "p-thresh", "thresh", "Value above which to constrain the reconstructed data"]], "etspy.base.TomoStack.reconstruct": [[43, 3, 2, "p-constrain", "constrain", "If True, output reconstruction is constrained above value given by thresh"], [43, 3, 2, "p-cuda", "cuda", "Whether or not to use CUDA-accelerated reconstruction algorithms."], [43, 3, 2, "p-dart_iterations", "dart_iterations", "Number of iterations to employ for DART reconstruction"], [43, 3, 2, "p-gray_levels", "gray_levels", "List of gray levels to use for DART reconstruction"], [43, 3, 2, "p-iterations", "iterations", "Number of iterations for the SIRT reconstruction (used with SIRT, SART, and DART methods) (default: 5)"], [43, 3, 2, "p-method", "method", "Reconstruction algorithm to use."], [43, 3, 2, "p-ncores", "ncores", "Number of cores to use for multithreaded reconstructions."], [43, 3, 2, "p-p", "p", "Probability for setting free pixels in DART reconstruction (only used if the reconstruction method is DART, default: 0.99)"], [43, 3, 2, "p-show_progressbar", "show_progressbar", "If True, show a progress bar for the reconstruction."], [43, 3, 2, "p-sino_filter", "sino_filter", "Filter for filtered backprojection."], [43, 3, 2, "p-thickness", "thickness", "Size of the output volume (in pixels) in the projection direction."], [43, 3, 2, "p-thresh", "thresh", "Value above which to constrain the reconstructed data"]], "etspy.base.TomoStack.remove_projections": [[44, 3, 2, "p-projections", "projections", "List of projection indices in integers to remove"]], "etspy.base.TomoStack.set_tilts": [[45, 3, 2, "p-increment", "increment", "Tilt increment between images"], [45, 3, 2, "p-start", "start", "Tilt angle of first image in stack"]], "etspy.base.TomoStack.stack_register": [[46, 3, 2, "p-cl_div_factor", "cl_div_factor", "(Only used when method ==COM_CL) Factor which determines the number of iterations of common line alignment to perform."], [46, 3, 2, "p-cl_ref_index", "cl_ref_index", "(Only used when method ==COM_CL) Reference slice for common line alignment."], [46, 3, 2, "p-cl_resolution", "cl_resolution", "(Only used when method ==COM_CL) Resolution for subpixel common line alignment."], [46, 3, 2, "p-com_ref_index", "com_ref_index", "(Only used when method ==COM_CL) Reference slice for center of mass alignment."], [46, 3, 2, "p-crop", "crop", "If True, crop aligned stack to eliminate border pixels."], [46, 3, 2, "p-method", "method", "Algorithm to use for registration calculation."], [46, 3, 2, "p-nslices", "nslices", "(Only used when method ==COM) Number of slices to return."], [46, 3, 2, "p-show_progressbar", "show_progressbar", "Enable/disable progress bar"], [46, 3, 2, "p-start", "start", "Position in tilt series to use as starting point for the alignment."]], "etspy.base.TomoStack.test_align": [[47, 3, 2, "", "constrain", "Perform a reconstruction with limited slices for visual inspection."], [47, 3, 2, "p-cuda", "cuda", "Whether or not to use CUDA-accelerated reconstruction algorithms."], [47, 3, 2, "p-iterations", "iterations", "Number of iterations for the SIRT reconstruction (used with SIRT, and SART methods) (default: 50)"], [47, 3, 2, "p-method", "method", "Reconstruction algorithm to use."], [47, 3, 2, "p-slices", "slices", "Position of slices to use for the reconstruction."], [47, 3, 2, "p-thickness", "thickness", "Size of the output volume (in pixels) in the projection direction. If None (default), the y-size of the stack is used."], [47, 3, 2, "p-thresh", "thresh", "Value above which to constrain the reconstructed data"], [47, 3, 2, "p-tilt_rotation", "tilt_rotation", "Angle by which to rotate stack prior to reconstruction"], [47, 3, 2, "p-tilt_shift", "tilt_shift", "Number of pixels by which to shift the stack prior to reconstruction"], [47, 3, 2, "p-vmax_std", "vmax_std", "Number of standard deviations from mean (upper bound) to use for scaling the displayed slices"], [47, 3, 2, "p-vmin_std", "vmin_std", "Number of standard deviations from mean (lower bound) to use for scaling the displayed slices"]], "etspy.base.TomoStack.test_correlation": [[48, 3, 2, "p-images", "images", "List of two numbers indicating which projections to cross-correlate. If None, the first two images will be used."]], "etspy.base.TomoStack.tilt_align": [[49, 3, 2, "p-also_shift", "also_shift", "(Only used when method == \"MaxImage\") If True, also calculate and apply the global shift perpendicular to the tilt by minimizing the sum of the reconstruction"], [49, 3, 2, "p-delta", "delta", "(Only used when method == \"MaxImage\") Angular increment in degrees for MaxImage calculation"], [49, 3, 2, "p-limit", "limit", "(Only used when method == \"MaxImage\") Maximum rotation angle for MaxImage calculation"], [49, 3, 2, "p-method", "method", "Algorithm to use for registration alignment."], [49, 3, 2, "p-nslices", "nslices", "(Only used when method == \"CoM\") Nubmer of slices to use for the center of mass analysis (only used if the slices parameter is not specified)."], [49, 3, 2, "p-plot_results", "plot_results", "(Only used when method == \"MaxImage\") If True, plot the maximum image along with the lines determined by Hough analysis"], [49, 3, 2, "p-shift_limit", "shift_limit", "(Only used when method == \"MaxImage\") The limit of shifts applied if also_shift is set to True"], [49, 3, 2, "p-slices", "slices", "(Only used when method == \"CoM\") Locations at which to perform the Center of Mass analysis."]], "etspy.datasets": [[50, 4, 1, "", "get_catalyst_data", "Load a model-simulated catalyst tilt series."], [51, 4, 1, "", "get_needle_data", "Load an experimental tilt series of needle-shaped specimen."]], "etspy.datasets.get_catalyst_data": [[50, 3, 2, "p-maxshift", "maxshift", "Upper bound for random shifts"], [50, 3, 2, "p-minshift", "minshift", "Lower bound for random shifts"], [50, 3, 2, "p-misalign", "misalign", "If True, apply random shifts to each projection to simulated drift"], [50, 3, 2, "p-noise", "noise", "If True, add Gaussian noise to the stack"], [50, 3, 2, "p-noise_factor", "noise_factor", "Percentage noise to be added."], [50, 3, 2, "p-tiltrotate", "tiltrotate", "Angle by which to rotate entire tilt series."], [50, 3, 2, "p-tiltshift", "tiltshift", "Number of pixels by which to shift entire tilt series."], [50, 3, 2, "p-yonly", "yonly", "If True, shifts are only applied along the Y-axis"]], "etspy.datasets.get_needle_data": [[51, 3, 2, "", "aligned", "Load an experimental tilt series of needle-shaped specimen."]], "etspy.io": [[52, 5, 1, "", "MismatchedTiltError", "Error for when number of tilts in signal does not match tilt dimension."], [53, 4, 1, "", "create_stack", "Create a TomoStack from existing in-memory tilt series data."], [54, 4, 1, "", "get_dm_tilts", "Extract tilts from DM tags."], [55, 4, 1, "", "get_mrc_tilts", "Extract tilts from an MRC file."], [56, 4, 1, "", "load", "Create a TomoStack object using data from a file."], [57, 4, 1, "", "load_serialem", "Load a multi-frame series collected by SerialEM."], [58, 4, 1, "", "load_serialem_series", "Load a multi-frame series collected by SerialEM."], [59, 4, 1, "", "parse_mdoc", "Parse experimental parameters from a SerialEM MDOC file."], [60, 4, 1, "", "parse_mrc_header", "Read the mrc header and return as dictionary."]], "etspy.io.create_stack": [[53, 3, 2, "p-stack", "stack", "Tilt series data (ntilts, ny, nx)"], [53, 3, 2, "p-tilts", "tilts", "An (optional) array defining the tilt angles"]], "etspy.io.get_dm_tilts": [[54, 3, 2, "p-s", "s", "A HyperSpy or ETSpy signal containing DigitalMigrograph metadata tags"]], "etspy.io.get_mrc_tilts": [[55, 3, 2, "p-filename", "filename", "Name of MRC file from which to extract tilts"], [55, 3, 2, "p-stack", "stack", "A HyperSpy or TomoStack signal"]], "etspy.io.load": [[56, 3, 2, "p-filename", "filename", "Name of file that contains data to be read. Accepted formats (.MRC, .DM3, .DM4)"], [56, 3, 2, "p-mdocs", "mdocs", "List of mdoc files for SerialEM data (optional)"], [56, 3, 2, "p-tilts", "tilts", "List of floats indicating the specimen tilt at each projection (optional)"]], "etspy.io.load_serialem": [[57, 3, 2, "p-mdocfile", "mdocfile", "Path to SerialEM metadata file for tilt series data."], [57, 3, 2, "p-mrcfile", "mrcfile", "Path to MRC file containing tilt series data."]], "etspy.io.load_serialem_series": [[58, 3, 2, "p-mdocfiles", "mdocfiles", "List of SerialEM metadata file paths for multi-frame tilt series data."], [58, 3, 2, "p-mrcfiles", "mrcfiles", "List of MRC file paths containing multi-frame tilt series data."]], "etspy.io.parse_mdoc": [[59, 3, 2, "p-mdoc_file", "mdoc_file", "Name of a SerialEM MDOC file"], [59, 3, 2, "p-series", "series", "If True, the MDOC files originated from a multiscan SerialEM acquisition. If False, the files originated from a single scan SerialEM acquisition."]], "etspy.io.parse_mrc_header": [[60, 3, 2, "p-filename", "filename", "Name of the MRC file to parse"]], "etspy.recon": [[61, 4, 1, "", "astra_error", "Perform SIRT reconstruction using the Astra toolbox algorithms."], [62, 4, 1, "", "dart_segment", "Segmentation step for DART Reconstruction."], [63, 4, 1, "", "get_dart_boundaries", "Boundary step for DART Reconstruction."], [64, 4, 1, "", "run", "Perform reconstruction of input tilt series."], [65, 4, 1, "", "run_alg", "Run CPU-based FBP, SIRT, or SART reconstruction algorithm using dask."], [66, 4, 1, "", "run_dart", "Run discrete algebraic reoncsturction technique (DART) algorithm."]], "etspy.recon.astra_error": [[61, 3, 2, "p-angles", "angles", "Projection angles in degrees."], [61, 3, 2, "p-constrain", "constrain", "If True, output reconstruction is constrained above value given by 'thresh'."], [61, 3, 2, "p-cuda", "cuda", "If True, use the CUDA-accelerated Astra algorithms."], [61, 3, 2, "p-iterations", "iterations", "Number of iterations for the SIRT reconstruction."], [61, 3, 2, "p-method", "method", "Reconstruction algorithm use."], [61, 3, 2, "p-sinogram", "sinogram", "Tilt series data either of the form [angles, x] or [angles, y, x] where y is the tilt axis and x is the projection axis."], [61, 3, 2, "p-thresh", "thresh", "Value above which to constrain the reconstructed data if constrain is True."]], "etspy.recon.dart_segment": [[62, 3, 2, "p-gray_vals", "gray_vals", "Grayscale values to assign the segmented regions."], [62, 3, 2, "p-rec", "rec", "Tomographic reconstruction."], [62, 3, 2, "p-thresholds", "thresholds", "Threshold values for segmentation."]], "etspy.recon.get_dart_boundaries": [[63, 3, 2, "p-segmented", "segmented", "Segmented reconstruction."]], "etspy.recon.run": [[64, 3, 2, "p-bp_filter", "bp_filter", "Filter to use for filtered backprojection"], [64, 3, 2, "p-constrain", "constrain", "If True, output reconstruction is constrained above value given by 'thresh'"], [64, 3, 2, "p-cuda", "cuda", "If True, use the CUDA-accelerated Astra algorithms."], [64, 3, 2, "p-dart_iterations", "dart_iterations", "Number of DART iterations"], [64, 3, 2, "p-gray_levels", "gray_levels", "Gray levels for DART reconstruction"], [64, 3, 2, "p-method", "method", "Reconstruction algorithm to use."], [64, 3, 2, "p-ncores", "ncores", "Number of cores to use for multithreaded CPU-based reconstructions"], [64, 3, 2, "p-niterations", "niterations", "Number of iterations for reconstruction (used with SIRT, SART, and DART methods)"], [64, 3, 2, "p-p", "p", "Probability for setting free pixels in DART reconstruction"], [64, 3, 2, "p-show_progressbar", "show_progressbar", "If True, show a progress bar for the reconstruction."], [64, 3, 2, "p-stack", "stack", "NumPy array containing the input tilt series for a TomoStack"], [64, 3, 2, "p-thickness", "thickness", "Limit for the height of the reconstruction."], [64, 3, 2, "p-thresh", "thresh", "Value above which to constrain the reconstructed data"], [64, 3, 2, "p-tilts", "tilts", "The tilt angles for the tilt series (usually found in the TomoStack.metadata.Tomography.tilts metadata node)"]], "etspy.recon.run_alg": [[65, 3, 2, "p-cfg", "cfg", "ASTRA algorithm configuration, as described for each of the algorithms present in the ASTRA docs (Algorithms)"], [65, 3, 2, "p-iters", "iters", "Number of iterations for the reconstruction"], [65, 3, 2, "p-proj_geom", "proj_geom", "ASTRA projection geometry, as described in the ASTRA docs (Toolbox concepts)"], [65, 3, 2, "p-sino", "sino", "Sinogram of shape (nangles, ny)"], [65, 3, 2, "p-vol_geom", "vol_geom", "ASTRA volume geometry, as described in the ASTRA docs (Toolbox concepts)"]], "etspy.recon.run_dart": [[66, 3, 2, "p-cfg", "cfg", "ASTRA algorithm configuration"], [66, 3, 2, "p-dart_iters", "dart_iters", "Number of iterations for the DART reconstruction"], [66, 3, 2, "p-gray_levels", "gray_levels", "Gray levels for DART reconstruction"], [66, 3, 2, "p-iters", "iters", "Number of iterations for the SART reconstruction"], [66, 3, 2, "p-p", "p", "Probability for free pixel determination"], [66, 3, 2, "p-proj_geom", "proj_geom", "ASTRA projection geometry"], [66, 3, 2, "p-sino", "sino", "Sinogram of shape (nangles, ny)"], [66, 3, 2, "p-thresholds", "thresholds", "Thresholds for DART reconstruction"], [66, 3, 2, "p-vol_geom", "vol_geom", "ASTRA volume geometry"]], "etspy.simulation": [[67, 4, 1, "", "add_noise", "Apply misalignment to a model tilt series and return as a copy."], [68, 4, 1, "", "create_catalyst_model", "Create a model data array that mimics a hetergeneous catalyst."], [69, 4, 1, "", "create_cylinder_model", "Create a model data array that mimics a needle shaped sample."], [70, 4, 1, "", "create_model_tilt_series", "Create a tilt series from a 3D volume."], [71, 4, 1, "", "misalign_stack", "Apply misalignment to a model tilt series."]], "etspy.simulation.add_noise": [[67, 3, 2, "p-noise_type", "noise_type", "Type of noise."], [67, 3, 2, "p-scale_factor", "scale_factor", "Amount of noise to add"], [67, 3, 2, "p-stack", "stack", "TomoStack simluation"]], "etspy.simulation.create_catalyst_model": [[68, 3, 2, "p-nparticles", "nparticles", "Number of particles to add"], [68, 3, 2, "p-particle_density", "particle_density", "Grayscale value to assign to the particles"], [68, 3, 2, "p-size_interval", "size_interval", "Lower and upper bounds (in that order) of the particle size"], [68, 3, 2, "p-support_density", "support_density", "Grayscale value to assign to the support material"], [68, 3, 2, "p-support_radius", "support_radius", "Radius (in pixels) of the support material"], [68, 3, 2, "p-volsize", "volsize", "X, Y, Z shape (in that order) of the volume"]], "etspy.simulation.create_cylinder_model": [[69, 3, 2, "p-add_others", "add_others", "If True, add a second and third cylinder to the model near the periphery. This is useful for testing the effects of additional objects entering the tilt series field of view."], [69, 3, 2, "p-blur", "blur", "If True, apply a Gaussian blur to the volume"], [69, 3, 2, "p-blur_sigma", "blur_sigma", "Sigma value for the Gaussiuan blur"], [69, 3, 2, "p-radius", "radius", "Radius of the cylinder to create"]], "etspy.simulation.create_model_tilt_series": [[70, 3, 2, "p-angles", "angles", "Projection angles for tilt series in degrees (optional)."], [70, 3, 2, "p-cuda", "cuda", "Whether or not to use CUDA-accelerated reconstruction algorithms."], [70, 3, 2, "p-model", "model", "3D array or HyperSpy signal containing the model volume to project to a tilt series"]], "etspy.simulation.misalign_stack": [[71, 3, 2, "p-interp_order", "interp_order", "The order of spline interpolation used by the scipy.ndimage.shift() or scipy.ndimage.rotate() function."], [71, 3, 2, "p-max_shift", "max_shift", "Maximum amount of jitter to apply to the stack"], [71, 3, 2, "p-min_shift", "min_shift", "Minimum amount of jitter to apply to the stack"], [71, 3, 2, "p-stack", "stack", "TomoStack simluation"], [71, 3, 2, "p-tilt_rotate", "tilt_rotate", "Amount of rotation to apply to the stack"], [71, 3, 2, "p-tilt_shift", "tilt_shift", "Number of pixels by which to offset the tilt axis from the center"], [71, 3, 2, "p-y_only", "y_only", "If True, limit the application of jitter to the x-direction only. Default is False"]], "etspy.utils": [[72, 4, 1, "", "calc_est_angles", "Caculate angles used for equally sloped tomography (EST)."], [73, 4, 1, "", "calc_golden_ratio_angles", "Calculate golden ratio angles for a given tilt range."], [74, 4, 1, "", "filter_stack", "Apply a Fourier filter to a sinogram or series of sinograms."], [75, 4, 1, "", "get_radial_mask", "Calculate a radial mask given a shape and center position."], [76, 4, 1, "", "multiaverage", "Register a multi-frame series collected by SerialEM."], [77, 4, 1, "", "register_serialem_stack", "Register a multi-frame series collected by SerialEM."], [78, 4, 1, "", "weight_stack", "Apply a weighting window to a stack perpendicular to the tilt axis."]], "etspy.utils.calc_est_angles": [[72, 3, 2, "p-num_points", "num_points", "Number of points in scan."]], "etspy.utils.calc_golden_ratio_angles": [[73, 3, 2, "p-nangles", "nangles", "Number of angles to calculate."], [73, 3, 2, "p-tilt_range", "tilt_range", "Tilt range in degrees."]], "etspy.utils.filter_stack": [[74, 3, 2, "p-cutoff", "cutoff", "Factor of sampling rate to use as the cutoff."], [74, 3, 2, "p-filter_name", "filter_name", "Type of filter to apply."], [74, 3, 2, "p-stack", "stack", "TomoStack with projection data"]], "etspy.utils.get_radial_mask": [[75, 3, 2, "p-center", "center", "(x, y) location of mask center, optional."], [75, 3, 2, "p-mask_shape", "mask_shape", "Shape (rows, cols) of the resulting mask."]], "etspy.utils.multiaverage": [[76, 3, 2, "p-nframes", "nframes", "Number of frames per tilt."], [76, 3, 2, "p-nx", "nx", "Pixels in x-dimension."], [76, 3, 2, "p-ny", "ny", "Pixels in y-dimension."], [76, 3, 2, "p-stack", "stack", "Array of shape [nframes, ny, nx]."]], "etspy.utils.register_serialem_stack": [[77, 3, 2, "", "ncpus", "Register a multi-frame series collected by SerialEM."], [77, 3, 2, "p-stack", "stack", "Signal of shape [ntilts, nframes, ny, nx]."]], "etspy.utils.weight_stack": [[78, 3, 2, "p-accuracy", "accuracy", "A string indicating the accuracy level for weighting."], [78, 3, 2, "p-stack", "stack", "The stack to be weighted."]]}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "attribute", "Python attribute"], "2": ["py", "method", "Python method"], "3": ["py", "parameter", "Python parameter"], "4": ["py", "function", "Python function"], "5": ["py", "exception", "Python exception"]}, "objtypes": {"0": "py:class", "1": "py:attribute", "2": "py:method", "3": "py:parameter", "4": "py:function", "5": "py:exception"}, "terms": {"": [0, 54], "0": [8, 12, 22, 23, 32, 33, 35, 36, 39, 40, 42, 43, 46, 47, 49, 50, 61, 64, 67, 70, 71, 74], "000156": 8, "0005": [8, 78], "015": [8, 78], "05": [8, 12, 46], "052103": 72, "1": [0, 8, 19, 22, 35, 39, 47, 49, 50, 69, 73, 77, 78], "10": [8, 21, 22, 32, 47, 49, 66, 72, 73, 78, 80], "100": [29, 49, 68, 80], "1038": 8, "11": [8, 78], "1103": 72, "1109": [8, 66], "1117": 73, "1186": [8, 78], "12": 68, "120": 43, "121": 43, "123201": 73, "1364": 8, "15": [29, 32, 68], "156": 8, "158": 8, "160": 49, "180": 70, "1998": 8, "1d": [0, 19, 61], "2": [8, 32, 43, 47, 50, 64, 67], "20": [8, 14, 22, 46, 49, 64], "200": 68, "2005": 72, "2008": 8, "2011": [66, 73], "2012": 8, "2015": [8, 78], "2024": 80, "2131661": 66, "255": 68, "256": 32, "27": 8, "3": [8, 15, 21, 23, 27, 32, 33, 36, 47, 49, 71], "30": 69, "33": 8, "3660298": 73, "3d": [0, 61, 70], "4": [8, 47, 80], "41": 8, "444": 8, "447": 8, "483": 8, "49": 80, "5": [8, 12, 32, 35, 39, 42, 43, 46, 50, 68, 69, 71, 74], "50": [21, 42, 47, 49, 61, 73], "600": 68, "650848": 8, "7": [8, 78], "72": 72, "77": 32, "8": [8, 12, 46], "83": 8, "99": [43, 64], "A": [8, 25, 49, 53, 54, 55, 59, 61, 66, 73, 78], "As": 78, "For": [0, 80], "If": [0, 8, 11, 12, 21, 22, 30, 35, 40, 42, 43, 44, 46, 47, 48, 49, 50, 59, 61, 64, 69, 70, 71, 75], "In": 0, "It": [0, 80], "One": [0, 24], "The": [0, 8, 10, 11, 12, 13, 14, 15, 16, 19, 22, 35, 38, 49, 56, 58, 64, 71, 78, 80], "Then": 13, "These": 0, "To": 80, "abl": 80, "about": [23, 31, 32, 33, 36], "abov": [42, 43, 47, 61, 64, 80], "abstract": 0, "acceler": [8, 15, 42, 43, 47, 61, 64, 70, 80], "accept": 56, "access": [0, 80], "accuraci": 78, "acquisit": 59, "activ": 80, "ad": 50, "adapt": 66, "add": [29, 50, 67, 68, 69], "add_nois": [0, 67], "add_oth": 69, "addit": [0, 34, 37, 41, 69, 80], "addition": 0, "advanc": [8, 78], "affin": [23, 32, 33, 36], "afmhot": 29, "after": [10, 21, 61, 80], "al": 8, "algebra": [0, 66], "algebraic": 43, "algorithm": [0, 8, 15, 42, 43, 46, 47, 49, 61, 64, 65, 66, 70], "ali": 49, "alig": [8, 80], "align": [1, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 36, 38, 42, 43, 46, 47, 48, 49, 51, 77, 78, 80], "align_oth": [36, 38], "align_stack": [0, 1, 8, 46], "align_to_oth": [0, 9], "alignmentmethod": [0, 1, 2, 3, 4, 5, 6, 7, 8, 46], "all": [8, 12, 23, 33, 35, 36, 46, 76], "allow": [0, 1, 7, 80], "along": [0, 17, 22, 33, 35, 49, 50], "alreadi": 0, "also": [0, 22, 49], "also_shift": [22, 49], "alter": [0, 19], "amount": [67, 71], "an": [0, 21, 23, 24, 29, 33, 36, 39, 49, 51, 53, 55, 59, 60, 70], "analysi": [0, 11, 13, 17, 21, 22, 49], "analyz": 49, "angl": [0, 22, 32, 45, 47, 49, 50, 53, 54, 55, 61, 64, 70, 72, 73], "angular": [22, 49], "ani": [0, 28, 60], "anim": 29, "anoth": [36, 38, 40], "api": [0, 28, 80], "append": 30, "appli": [0, 8, 10, 12, 13, 15, 16, 22, 36, 38, 39, 49, 50, 67, 69, 71, 74, 78], "applic": 71, "apply_shift": [0, 10], "approach": [0, 8, 49, 80], "appropri": [21, 49], "approxim": 0, "ar": [0, 8, 10, 13, 14, 17, 23, 28, 32, 33, 36, 43, 44, 46, 47, 49, 50, 78, 80], "area": [0, 20], "arg": [23, 24, 28, 33, 34, 36, 37, 41], "argument": [23, 28, 33, 34, 36, 37, 41], "arrai": [0, 8, 19, 22, 38, 49, 53, 61, 64, 68, 69, 70, 75, 76], "assign": [62, 68], "associ": 80, "assort": 0, "assum": 80, "astra": [0, 42, 43, 47, 61, 64, 65, 66, 70, 80], "astra_error": [0, 61], "attempt": 47, "auto": 80, "autom": [0, 22, 49], "automat": [21, 47, 49], "avail": [36, 43, 49], "averag": [58, 76, 77], "avi": [23, 29, 33, 36], "ax": [33, 35], "axi": [0, 8, 11, 12, 13, 14, 17, 21, 22, 29, 36, 38, 45, 49, 50, 61, 71, 78], "b": [72, 73], "backproject": [43, 64], "bar": [8, 15, 16, 43, 46, 64], "barlett": [43, 64], "base": [0, 8, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 61, 64, 65, 78, 80], "basic": [23, 31, 33, 36], "batenburg": 66, "been": 38, "below": 42, "best": [0, 17], "between": [8, 42, 45, 50], "binari": 80, "blackman": [43, 64], "blur": 69, "blur_sigma": 69, "bool": [0, 1, 6, 8, 15, 16, 22, 40, 42, 43, 46, 47, 49, 50, 51, 59, 61, 64, 69, 70, 71], "border": 46, "both": 39, "bound": [47, 50, 68], "boundari": [0, 63], "bp_filter": 64, "bpf": 39, "c": [8, 80], "cacul": [0, 72], "calc_est_angl": [0, 72], "calc_golden_ratio_angl": [0, 73], "calc_shifts_cl": [0, 11], "calc_shifts_com_cl": [0, 8, 12, 46], "calcul": [0, 1, 7, 8, 9, 11, 12, 14, 15, 16, 18, 22, 36, 38, 46, 49, 73, 75], "calculate_shifts_com": [0, 8, 13, 46], "calculate_shifts_conservation_of_mass": [0, 14], "calculate_shifts_pc": [0, 8, 15], "calculate_shifts_stackreg": [0, 16], "calibr": [36, 45], "can": [0, 49, 80], "capabl": 80, "catalyst": [0, 50, 51, 68], "center": [0, 1, 2, 3, 8, 12, 13, 17, 18, 19, 21, 46, 49, 71, 75, 78], "central": [8, 46], "certain": [36, 44], "cfg": [0, 43, 65, 66], "chang": [23, 25, 33, 36, 42, 80], "change_data_typ": [23, 25, 33, 36], "change_dtyp": 25, "chemic": [8, 78], "chosen": [8, 11, 12, 46, 47], "cl": [1, 3, 8, 46], "cl_div_factor": [8, 11, 12, 46], "cl_ref_index": [8, 11, 12, 46], "cl_resolut": [8, 11, 12, 46], "clamp": [21, 49], "class": [0, 1, 23, 24, 33, 36], "classmethod": [1, 6, 7], "clim": 29, "closest": [8, 11, 12], "cmap": 29, "co": 74, "code": [0, 8, 66, 80], "col": 75, "collect": [0, 57, 58, 76, 77], "colormap": 29, "com": [0, 1, 2, 3, 8, 21, 36, 46, 49, 80], "com_cl": [1, 3, 8, 46], "com_ref_index": [8, 12, 46], "combin": [0, 8, 12, 22, 46, 49], "command": [0, 80], "common": [0, 1, 3, 8, 11, 12, 20, 46], "commonli": 0, "commonstack": [0, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36], "compar": 21, "compil": 80, "complet": 80, "comput": [0, 8], "concept": 65, "conda": 80, "configur": [65, 66], "conserv": [0, 14], "constrain": [42, 43, 47, 61, 64], "constraint": [42, 43], "constructor": 0, "consult": 0, "contain": [0, 1, 6, 8, 21, 22, 35, 42, 43, 50, 51, 53, 54, 56, 57, 58, 59, 61, 64, 70], "content": 80, "contrast": [23, 26, 27, 29, 33, 36], "control": [0, 8], "conveni": 0, "convers": 25, "copi": [0, 8, 9, 10, 20, 21, 23, 26, 27, 32, 33, 36, 39, 40, 44, 46, 49, 67, 71], "core": [43, 64], "correct": [0, 80], "correl": [0, 1, 4, 8, 15, 36, 46, 48], "correspond": 74, "cosin": [43, 64, 74], "could": 80, "cpu": [0, 61, 64, 65], "creat": [0, 23, 24, 26, 27, 29, 32, 33, 34, 36, 37, 53, 56, 68, 69, 70, 80], "create_catalyst_model": [0, 68], "create_cylinder_model": [0, 69], "create_model_tilt_seri": [0, 70], "create_stack": [0, 53], "creation": 0, "crop": [0, 20, 46], "cross": [36, 48], "cubic": 32, "cuda": [8, 15, 42, 43, 47, 61, 64, 70, 80], "current": 0, "cutoff": 74, "cylind": [21, 49, 69], "d": [8, 26, 27, 32, 39, 42, 43, 46, 49], "dart": [0, 42, 43, 47, 62, 63, 64, 66], "dart_it": 66, "dart_iter": [43, 64], "dart_seg": [0, 62], "dask": [0, 65], "data": [8, 13, 15, 19, 21, 22, 23, 25, 30, 31, 33, 36, 38, 42, 43, 47, 53, 56, 57, 58, 61, 64, 68, 69, 70, 74, 80], "dataset": [26, 27, 32, 36, 38, 39, 42, 43, 46, 49, 50, 51, 80], "decis": [42, 43, 47, 70], "dedic": [0, 80], "deepcopi": 43, "default": [8, 12, 23, 28, 29, 32, 33, 35, 36, 42, 43, 46, 47, 61, 64, 70, 71, 74, 75, 78], "defin": 53, "degre": [11, 32, 49, 61, 70, 72, 73], "delta": [22, 49], "depend": 80, "describ": [8, 65, 78], "design": 0, "desir": [0, 19], "detail": [0, 1, 8, 43, 46, 80], "detect": [49, 80], "determin": [0, 8, 11, 12, 21, 22, 36, 42, 46, 49, 66, 78], "deviat": [27, 35, 47], "dict": [0, 36, 41, 59, 60, 65, 66], "dictionari": [0, 59, 60], "differ": [8, 42, 80], "digitalmigrograph": 54, "dimens": [0, 11, 30, 32, 40, 52, 76], "dimension": 19, "direct": [43, 47, 71], "directli": [0, 23, 24], "disabl": [8, 15, 16, 46], "discreat": 43, "discret": [0, 66], "displai": [35, 40, 47], "distribut": 0, "dm": [0, 54], "dm3": [0, 56], "dm4": [0, 56], "do": [23, 80], "doc": 65, "docstr": 46, "document": [23, 33, 36, 43, 80], "doe": [0, 52], "doi": [8, 66, 72, 73, 78], "done": 80, "dpi": 29, "drift": 50, "dtype": [23, 25, 33, 36], "due": 80, "dure": 0, "e": [8, 23], "each": [10, 11, 12, 13, 15, 16, 18, 42, 49, 50, 56, 58, 61, 65, 77], "easier": 0, "easili": 0, "edg": [49, 78], "effect": [69, 78], "effici": 8, "either": [0, 32, 42, 49, 61, 64, 80], "electron": [8, 78, 80], "element": [8, 14], "elimin": 46, "emploi": [32, 43], "enabl": [8, 15, 16, 46, 80], "end": 29, "eng": 73, "ensur": 80, "enter": 69, "entir": [36, 39, 50], "enum": [0, 6, 7, 8, 46], "env": 80, "environ": 80, "equal": [0, 72], "equival": [0, 32], "error": [0, 42, 52, 61], "est": [0, 72], "et": 8, "etspi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78], "evalu": 42, "evenli": 70, "exampl": [26, 27, 32, 39, 42, 43, 46, 49, 80], "except": [0, 52], "exist": [0, 53], "expect": [21, 49], "experiment": [0, 51, 59], "expos": 0, "extens": [0, 80], "extract": [0, 54, 55], "f": [72, 80], "factor": [8, 11, 12, 15, 46, 74], "fals": [0, 8, 15, 22, 40, 43, 46, 49, 50, 51, 59, 61, 64, 69, 71, 75], "fbp": [0, 42, 43, 47, 64, 65], "fbp_cuda": 43, "featur": [0, 49], "few": [0, 80], "fft": [0, 19], "field": 69, "fienup": 8, "fig": [35, 48], "figur": [35, 36, 48], "file": [23, 29, 30, 33, 36, 55, 56, 57, 58, 59, 60, 80], "filenam": [0, 23, 29, 30, 33, 36, 55, 56, 60], "filter": [0, 22, 36, 39, 43, 64, 74], "filter_nam": 74, "filter_stack": [0, 74], "filtertyp": 43, "final": 80, "first": [13, 40, 45, 48, 80], "fit": 49, "flat": [43, 64], "float": [0, 8, 11, 12, 22, 23, 29, 32, 33, 35, 36, 39, 42, 43, 45, 46, 47, 49, 50, 56, 59, 61, 64, 66, 67, 69, 74], "follow": [0, 80], "form": 61, "format": 56, "forster": 72, "forward": 42, "found": 64, "fourier": [0, 74], "fp": 29, "fraction": 39, "frame": [0, 29, 57, 58, 76, 77], "free": [43, 64, 66], "frequenc": 74, "from": [0, 17, 18, 27, 35, 36, 44, 47, 53, 54, 55, 56, 59, 60, 66, 70, 71, 80], "full": 47, "function": [0, 18, 23, 25, 28, 33, 36, 49, 71, 80], "g": 23, "gaussian": [43, 50, 64, 67, 69], "gaussiuan": 69, "gener": 80, "geometri": [65, 66], "get": [0, 17, 80], "get_best_slic": [0, 17], "get_catalyst_data": [0, 50], "get_com": [0, 18], "get_dart_boundari": [0, 63], "get_dm_tilt": [0, 54], "get_mrc_tilt": [0, 55], "get_needle_data": [0, 26, 27, 32, 39, 42, 43, 46, 49, 51], "get_radial_mask": [0, 75], "githubusercont": 80, "given": [0, 43, 61, 64, 73, 75, 76], "global": [8, 22, 49, 78], "golden": [0, 73], "gpu": [8, 15, 80], "grai": [43, 64, 66], "gray_level": [43, 64, 66], "gray_val": 62, "grayscal": [62, 68], "greatli": 80, "group": 80, "guizar": 8, "ham": [43, 64], "han": 74, "hann": [43, 64, 74], "harri": [43, 64], "have": [14, 17, 38, 80], "head": 80, "header": [0, 60], "height": 64, "held": 0, "helper": 0, "hetergen": [0, 68], "high": 78, "highest": [14, 17], "hold": [0, 33], "hough": [22, 49], "how": 0, "http": [8, 72, 73, 78, 80], "hyperspi": [0, 23, 25, 28, 33, 36, 54, 55, 70, 80], "i": [1, 6, 8, 12, 13, 21, 22, 23, 24, 32, 38, 42, 43, 46, 47, 49, 59, 61, 64, 69, 71, 74, 75, 78, 80], "ideal": [21, 49], "ieee": 8, "imag": [0, 8, 10, 12, 13, 15, 16, 22, 29, 36, 39, 45, 48, 49, 58, 78], "imagej": 8, "implement": [8, 40], "import": [0, 26, 27, 32, 39, 42, 43, 46, 49, 80], "inapplic": [42, 47], "includ": [38, 80], "increment": [22, 36, 45, 49], "index": 11, "indic": [0, 18, 35, 44, 48, 56, 78], "inherit": 25, "input": [0, 8, 10, 19, 21, 22, 26, 27, 32, 39, 42, 46, 49, 64, 65, 66, 67, 71, 74, 78], "inspect": [36, 42, 47], "instanc": [0, 23, 24, 33, 36, 53], "instanti": 23, "instead": [0, 24, 25], "instrument": 80, "int": [0, 8, 11, 12, 13, 14, 15, 16, 17, 19, 21, 23, 27, 29, 33, 35, 36, 39, 40, 42, 43, 46, 47, 48, 49, 50, 61, 64, 65, 66, 68, 69, 71, 72, 73, 75, 76, 77], "integ": 44, "intend": [23, 24], "intens": [8, 27], "interact": 80, "interfac": [0, 80], "intern": 0, "interp_ord": 71, "interpol": [32, 71], "introduc": 78, "invert": [23, 26, 33, 36], "io": [0, 52, 53, 54, 55, 56, 57, 58, 59, 60], "ipykernel": 80, "ipympl": 80, "is_valid_valu": [1, 6], "isig": 43, "iter": [0, 8, 11, 12, 36, 42, 43, 46, 47, 61, 64, 65, 66], "its": 24, "j": [66, 72], "jame": 8, "januari": 8, "jitter": 71, "just": 0, "k": 66, "kaestner": 73, "kaiser": [43, 64], "kernel": 80, "keyword": [28, 34, 37, 41], "kwarg": [23, 24, 28, 33, 34, 36, 37, 41], "lab": 80, "lak": [43, 64, 74], "lanczo": [43, 64], "last": 80, "later": 8, "least": 8, "left": [42, 43, 47, 70], "less": [8, 12, 46], "letter": 8, "level": [0, 23, 26, 27, 33, 36, 43, 64, 66, 78], "levi": 72, "librari": [0, 80], "like": 80, "limit": [0, 22, 29, 36, 47, 49, 64, 71], "line": [0, 1, 3, 8, 11, 12, 19, 22, 46, 49], "linear": [32, 49], "linux": 80, "list": [1, 7, 21, 36, 43, 44, 48, 49, 56, 58, 62, 64, 66], "littl": 80, "load": [0, 50, 51, 56, 57, 58, 80], "load_serialem": [0, 57], "load_serialem_seri": [0, 58], "locat": [0, 14, 17, 18, 19, 21, 42, 49, 75], "logan": [43, 64, 74], "logic": 75, "low": 78, "lower": [0, 29, 47, 50, 68], "m": [8, 80], "maco": 80, "mai": 80, "major": [0, 80], "make": [0, 21], "manual": [36, 40], "manual_align": [36, 40], "manuel": 8, "mask": [0, 75], "mask_shap": [0, 75], "mass": [0, 1, 2, 3, 8, 12, 13, 14, 17, 18, 21, 46, 49, 78], "master": 80, "match": [0, 52], "materi": 68, "matlab": 8, "matplotlib": 29, "max": 43, "max_shift": 71, "maxim": 46, "maximag": [36, 49], "maximum": [22, 27, 49, 71], "maxshift": 50, "mdoc": [0, 56, 59], "mdoc_fil": [0, 59], "mdocfil": [0, 57, 58], "mean": [27, 35, 39, 47, 80], "median": 39, "medium": 78, "memori": [0, 53], "metadata": [8, 30, 54, 57, 58, 59, 64], "method": [2, 3, 4, 5, 8, 11, 12, 13, 39, 42, 43, 46, 47, 49, 61, 64, 78], "miao": 72, "middl": [8, 11, 12, 35], "midpoint": 46, "mimic": [0, 68, 69], "min_shift": 71, "miniconda": 80, "minim": [8, 22, 49], "minimum": 71, "minshift": 50, "misalign": [0, 50, 67, 71], "misalign_stack": [0, 71], "miscellan": 0, "mismatchedtilterror": [0, 52], "mode": 32, "model": [0, 50, 67, 68, 69, 70, 71], "modul": [0, 80], "more": [0, 1, 8, 46, 80], "most": [0, 35], "motion": 49, "motiv": [8, 78], "movi": [23, 29, 33, 36], "mrc": [0, 55, 56, 57, 58, 60, 80], "mrcfile": [0, 57, 58], "multi": [0, 57, 58, 76, 77], "multiaverag": [0, 76], "multipl": 59, "multiscan": 59, "multithread": [43, 64], "munch": 73, "must": [9, 29, 32, 38, 39, 42, 43, 46, 47, 49, 50, 61, 64, 67, 71], "name": [30, 55, 56, 59, 60, 80], "nangl": [65, 66, 73], "natur": 8, "nature10934": 8, "navig": [23, 28, 33, 36], "ncore": [43, 64], "ncpu": 77, "ndarrai": [0, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 43, 47, 49, 53, 54, 55, 56, 58, 59, 61, 62, 63, 64, 65, 66, 70, 72, 73, 75, 76], "ndimag": 71, "nearest": 32, "necessari": 80, "needl": [0, 51, 69], "neg": 42, "neighborhood": 39, "new": 80, "newli": 80, "nframe": [0, 76, 77], "niter": 64, "node": 64, "nois": [50, 67], "noise_factor": 50, "noise_typ": 67, "noisi": 67, "non": [28, 34, 37, 41, 42, 50], "none": [0, 8, 11, 12, 14, 21, 23, 29, 30, 32, 33, 35, 36, 42, 43, 44, 46, 47, 48, 49, 53, 55, 56, 64, 70, 75], "normal": [23, 27, 33, 36], "note": 32, "notebook": [0, 80], "notimplementederror": [23, 24], "np": 49, "nparticl": 68, "nslice": [0, 8, 13, 17, 18, 21, 36, 40, 42, 46, 49], "ntilt": [18, 53, 77], "nubmer": [21, 49], "num_point": [0, 72], "number": [0, 8, 11, 12, 13, 17, 27, 29, 32, 35, 36, 40, 42, 43, 46, 47, 48, 50, 52, 61, 64, 65, 66, 68, 71, 72, 73, 76], "numpi": [0, 8, 25, 49, 64], "nuttal": [43, 64], "nx": [53, 76, 77], "ny": [53, 65, 66, 76, 77], "nyquist": 74, "o": 72, "object": [0, 56, 61, 69], "octob": 80, "offset": [50, 71], "ol": 8, "one": [8, 36, 38, 39, 43, 46, 47], "onli": [8, 21, 43, 46, 49, 50, 71], "oper": 0, "opt": 73, "optic": 8, "optimum": [36, 42], "option": [8, 43, 46, 49, 53, 56, 70, 75, 78], "order": [68, 71], "org": [8, 72, 73, 78, 80], "orient": [36, 41], "origin": 59, "other": [0, 8, 9, 12, 20, 28, 36, 38, 46, 80], "otherwis": [59, 61, 64], "out": [8, 9, 20, 21, 32, 38, 46, 49], "outfil": 29, "output": [29, 36, 43, 47, 48, 61, 64], "outsid": 75, "over": [0, 73], "overrid": [23, 28, 33, 36], "oversampl": 72, "p": [8, 14, 43, 64, 66, 73, 80], "packag": 80, "pad": [0, 8, 14, 19, 39], "pad_lin": [0, 19], "paddeds": [0, 19], "page": 0, "pair": [23, 30, 33, 36], "parallel": [0, 8, 11, 12, 14], "paramet": [0, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 27, 29, 30, 32, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78], "pars": [0, 59, 60], "parse_mdoc": [0, 59], "parse_mrc_head": [0, 60], "part": [0, 36, 40], "particl": 68, "particle_dens": 68, "particular": 0, "parzen": [43, 64], "pass": [23, 28, 33, 34, 36, 37, 41], "path": [0, 21, 23, 30, 33, 36, 55, 56, 57, 58, 59, 60, 80], "pc": [1, 4, 8, 46, 49], "per": [29, 76], "percentag": 50, "perfectli": 0, "perform": [0, 8, 12, 14, 21, 22, 36, 42, 46, 47, 49, 61, 64], "peripheri": 69, "perpendicular": [0, 8, 12, 13, 22, 49, 78], "phase": [0, 1, 4, 8, 15, 46], "phy": 72, "physic": [8, 78], "physrevb": 72, "pixel": [11, 32, 40, 43, 46, 47, 50, 64, 66, 68, 71, 76], "place": 80, "plane": 32, "pleas": 0, "plot": [22, 23, 28, 33, 35, 36, 41, 49, 80], "plot_result": [22, 49], "plot_sino": [36, 41], "plot_slic": [33, 35], "plugin": 8, "pm": 80, "point": [8, 15, 16, 46, 72], "poissonian": 67, "port": 8, "portion": 40, "posit": [0, 8, 15, 16, 40, 43, 46, 47, 75], "pp": [8, 78], "practic": 66, "pre": 80, "prequisit": 80, "prerequisit": 80, "present": [55, 65], "previous": [0, 9, 20, 38], "primari": 9, "primarili": 0, "print": [23, 31, 33, 36], "prior": [36, 47, 48], "probabl": [43, 64, 66], "process": [0, 8, 15, 80], "progress": [8, 15, 16, 43, 46, 64], "proj_geom": [65, 66], "project": [8, 11, 12, 22, 29, 36, 42, 43, 44, 46, 47, 48, 49, 50, 56, 61, 64, 65, 66, 70, 74], "provid": [0, 8, 11, 12, 21, 44, 46, 49, 53, 73, 80], "pseudo": 66, "publish": 66, "pure": 80, "pyramid": 8, "pystackreg": [0, 8, 13, 16], "python": [8, 80], "quickli": 47, "r": 8, "radial": [0, 75], "radiu": [68, 69], "rais": [23, 24, 44], "ram": [43, 64, 74], "random": 50, "rang": [0, 8, 14, 21, 49, 70, 71, 73], "rate": 74, "ratio": [0, 14, 17, 73], "raw": [23, 30, 33, 36, 80], "read": [0, 56, 59, 60], "rec": [0, 43, 61, 62, 64], "rec_stack": 42, "receiv": 30, "recommend": 0, "recon": [0, 61, 62, 63, 64, 65, 66], "recon_error": [36, 42], "reconstruct": [22, 33, 35, 36, 42, 43, 47, 49, 61, 62, 63, 64, 65, 66, 70, 72, 80], "recstack": [0, 23, 24, 33, 34, 35, 36, 43], "reduc": 78, "ref": 80, "refer": [8, 11, 12, 46, 80], "refin": 13, "reg": [12, 49, 77], "regcom": 46, "regcomcl": 46, "region": [62, 75], "regist": [0, 8, 9, 13, 36, 46, 76, 77, 80], "register_serialem_stack": [0, 77], "registr": [0, 1, 5, 8, 38, 46, 49], "regpc": 46, "regsr": 46, "regular": 0, "rel": 40, "relat": 0, "releas": 80, "remov": [36, 44], "remove_project": [36, 44], "reoncsturct": [0, 66], "repres": [0, 25, 36], "requir": 80, "resampl": [8, 15], "residu": 61, "residual_error": 61, "resolut": [8, 12, 29, 46], "resourc": 80, "respect": [36, 40], "result": [0, 25, 33, 38, 40, 48, 56, 58, 74, 75, 77], "return": [0, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 26, 27, 32, 35, 36, 38, 39, 40, 42, 43, 44, 46, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78], "rev": 72, "rigid": 8, "rotat": [21, 22, 32, 47, 49, 50, 71], "routin": 0, "row": 75, "rpl": [23, 30, 33, 36], "rproject": [43, 64], "rsinogram": [43, 64], "run": [0, 64, 65, 66, 80], "run_alg": [0, 65], "run_dart": [0, 66], "ruttimann": 8, "s40679": [8, 78], "s_invert": 26, "s_new": 44, "s_normal": 27, "same": [9, 38], "sampl": [0, 69, 73, 74], "samuel": 8, "sander": [8, 78], "sart": [0, 42, 43, 47, 61, 64, 65, 66], "save": [23, 29, 30, 33, 36], "save_movi": [23, 29, 33, 36], "save_raw": [23, 30, 33, 36], "scale": [35, 47], "scale_factor": 67, "scan": [59, 72], "scikit": 8, "scipi": 71, "scott": 8, "second": [29, 40, 69], "see": [1, 8, 46, 72, 73, 80], "segment": [0, 62, 63], "select": [17, 80], "self": [23, 26, 27, 32, 33, 36, 38, 44], "seri": [0, 8, 10, 12, 13, 14, 15, 16, 17, 18, 21, 22, 36, 38, 43, 44, 46, 50, 51, 53, 57, 58, 59, 61, 64, 67, 69, 70, 71, 74, 76, 77, 80], "serialem": [0, 56, 57, 58, 59, 76, 77], "set": [0, 22, 23, 27, 28, 33, 36, 43, 49, 64], "set_tilt": [36, 45], "sever": [36, 39], "shape": [0, 51, 65, 66, 68, 69, 75, 76, 77], "shepp": [43, 64, 74], "shift": [0, 8, 9, 10, 11, 12, 13, 14, 15, 16, 20, 22, 32, 36, 38, 40, 47, 49, 50, 71], "shift_crop": [0, 20], "shift_limit": [22, 49], "shot": 67, "should": [8, 12, 19, 23, 24, 33, 36, 46, 80], "show": [43, 48, 64], "show_progressbar": [8, 15, 16, 43, 46, 49, 64], "sicairo": 8, "sigma": 69, "signal": [23, 24, 28, 33, 34, 36, 37, 42, 52, 54, 55, 70, 77], "signal1d": [36, 42], "signal2d": [0, 23, 25, 28, 33, 34, 36, 37, 42, 53, 54, 55, 68, 69, 70, 77], "sijber": 66, "simluat": [67, 71], "simpl": 80, "simplest": 80, "simplifi": 80, "simul": [50, 51, 67, 68, 69, 70, 71], "simultan": 43, "singl": 59, "sino": [0, 65, 66], "sino_filt": 43, "sinogram": [0, 36, 41, 42, 43, 61, 64, 65, 66, 74], "sirt": [0, 42, 43, 47, 61, 64, 65], "size": [9, 19, 21, 38, 39, 43, 47, 49, 64, 68], "size_interv": 68, "skimag": [23, 32, 33, 36], "slice": [0, 8, 12, 13, 14, 17, 18, 21, 29, 33, 35, 36, 40, 42, 43, 46, 47, 49], "slider": [23, 28, 33, 36], "slope": [0, 72], "so": 23, "sobel": [22, 39], "some": [23, 31, 33, 36, 80], "sourc": [0, 1, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78], "space": 70, "spatial": [0, 8, 9, 36, 38, 46], "specif": [25, 80], "specifi": [21, 30, 46, 49, 80], "specimen": [0, 21, 51, 56], "spline": 71, "squar": [8, 42], "stack": [0, 1, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 33, 35, 36, 39, 40, 42, 43, 45, 46, 47, 49, 50, 53, 55, 56, 57, 58, 64, 67, 71, 74, 76, 77, 78, 80], "stack_reg": [1, 5], "stack_regist": [36, 46, 49], "stackreg": [1, 5, 8, 46], "stackw": 78, "standard": [27, 35, 47], "start": [8, 15, 16, 23, 29, 33, 36, 45, 46, 80], "stat": [23, 31, 33, 36], "statist": [23, 31, 33, 36], "statu": 80, "stem": 80, "step": [0, 62, 63], "still": 80, "stop": [23, 29, 33, 36], "store": [8, 80], "str": [0, 1, 7, 23, 25, 28, 29, 30, 33, 36, 55, 56, 57, 58, 59, 60], "string": [25, 78], "structur": [8, 78], "sub": [0, 11, 24], "subclass": 23, "subpixel": [8, 12, 46], "sum": [22, 42, 49], "support": 68, "support_dens": 68, "support_radiu": 68, "system": 80, "t": [8, 78], "tag": [0, 54], "taper": 39, "target": 8, "task": 0, "techniqu": [0, 43, 66], "tem": 80, "termin": 42, "test": [0, 1, 6, 36, 47, 48, 69], "test_align": [36, 47], "test_correl": [36, 48], "than": [8, 12, 46], "thei": 38, "theta": 73, "thevenaz": 8, "thi": [0, 8, 12, 23, 38, 42, 46, 47, 69, 78, 80], "thick": [43, 47, 64], "thing": [0, 80], "third": 69, "three": [8, 33, 35, 47, 49], "thresh": [42, 43, 47, 61, 64], "threshold": [0, 62, 66], "thurman": 8, "tilt": [0, 8, 11, 12, 13, 14, 15, 16, 17, 18, 21, 22, 36, 38, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 64, 67, 69, 70, 71, 73, 76, 77, 78, 80], "tilt_align": [36, 49], "tilt_com": [0, 21, 49], "tilt_maximag": [0, 22], "tilt_rang": [0, 73], "tilt_rot": [36, 47, 71], "tilt_shift": [36, 47, 71], "tiltrot": 50, "tiltseri": 80, "tiltshift": 50, "tip": 66, "titl": [29, 32], "toler": 42, "tomograph": [0, 36, 62], "tomographi": [0, 8, 23, 64, 66, 72, 78, 80], "tomostack": [0, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 32, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 64, 67, 70, 71, 74, 77, 78, 80], "tool": [0, 80], "toolbox": [0, 43, 61, 65, 80], "top": [29, 43, 64], "total": [14, 17], "toth": 0, "track": [0, 8, 21, 46, 49], "trans_stack": [23, 32, 33, 36], "transact": 8, "transform": [22, 23, 32, 33, 36, 49], "translat": [8, 21], "treatment": [0, 19], "triangular": [43, 64], "troubl": 80, "trtik": 73, "true": [22, 40, 42, 43, 46, 47, 49, 50, 59, 61, 64, 69, 71, 75], "tukei": [43, 64], "tupl": [0, 8, 14, 29, 36, 41, 42, 48, 58, 59, 61, 68, 75], "two": [0, 48], "type": [0, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 30, 32, 33, 35, 36, 38, 39, 43, 44, 46, 48, 49, 50, 51, 53, 54, 55, 56, 57, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78], "u": 8, "under": 43, "uninstal": 80, "unser": 8, "upper": [29, 47, 50, 68], "upsample_factor": [8, 15], "us": [0, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 22, 23, 24, 25, 29, 30, 32, 33, 35, 36, 38, 42, 43, 46, 47, 48, 49, 56, 61, 64, 65, 69, 70, 71, 72, 74, 75, 78], "usag": 0, "use_cuda": [42, 43, 47, 70], "user": 80, "usnistgov": 80, "usual": 64, "util": [72, 73, 74, 75, 76, 77, 78], "valid": [0, 8], "valu": [0, 6, 7, 21, 42, 43, 46, 47, 49, 58, 59, 60, 61, 62, 64, 68, 69], "valueerror": [0, 44, 52], "varianc": [14, 17], "variou": 0, "version": [19, 22, 62, 74, 78, 80], "vertic": [21, 50], "view": [35, 69], "virtual": 80, "visual": [0, 36, 42, 47], "vmax_std": [35, 47], "vmin_std": [35, 47], "vol": [8, 78], "vol_geom": [65, 66], "volsiz": 68, "volum": [0, 33, 43, 47, 64, 65, 66, 68, 69, 70], "wa": [9, 20], "wai": [0, 80], "warn": 80, "weight": [0, 78], "weight_stack": [0, 78], "whatev": 80, "when": [0, 8, 42, 46, 49, 52, 78, 80], "where": 61, "whether": [42, 43, 47, 70], "which": [0, 8, 9, 11, 12, 14, 15, 17, 18, 20, 21, 25, 29, 32, 38, 40, 42, 43, 46, 47, 48, 49, 50, 55, 61, 64, 71, 74, 80], "width": [23, 27, 33, 36], "window": [0, 78, 80], "wish": 0, "within": 80, "without": [0, 19], "work": 80, "would": 80, "x": [10, 12, 13, 15, 16, 17, 21, 32, 40, 49, 61, 68, 71, 75, 76], "xrang": [8, 14], "xshift": [14, 23, 32, 33, 36, 40], "xslice": [33, 35], "xy": 29, "xz": 29, "y": [10, 12, 13, 15, 16, 32, 40, 43, 47, 50, 61, 64, 68, 75, 76], "y_onli": 71, "yaml": 80, "yml": 80, "yonli": 50, "you": [0, 80], "your": [0, 80], "yshift": [11, 23, 32, 33, 36, 40], "yslice": 35, "yz": 29, "z": [61, 68], "zslice": 35, "\u00e5ngstr\u00f6m": 8}, "titles": ["General Information", "etspy.AlignmentMethod", "etspy.AlignmentMethod.COM", "etspy.AlignmentMethod.COM_CL", "etspy.AlignmentMethod.PC", "etspy.AlignmentMethod.STACK_REG", "etspy.AlignmentMethod.is_valid_value", "etspy.AlignmentMethod.values", "etspy.align.align_stack", "etspy.align.align_to_other", "etspy.align.apply_shifts", "etspy.align.calc_shifts_cl", "etspy.align.calc_shifts_com_cl", "etspy.align.calculate_shifts_com", "etspy.align.calculate_shifts_conservation_of_mass", "etspy.align.calculate_shifts_pc", "etspy.align.calculate_shifts_stackreg", "etspy.align.get_best_slices", "etspy.align.get_coms", "etspy.align.pad_line", "etspy.align.shift_crop", "etspy.align.tilt_com", "etspy.align.tilt_maximage", "etspy.base.CommonStack", "etspy.base.CommonStack.__init__", "etspy.base.CommonStack.change_data_type", "etspy.base.CommonStack.invert", "etspy.base.CommonStack.normalize", "etspy.base.CommonStack.plot", "etspy.base.CommonStack.save_movie", "etspy.base.CommonStack.save_raw", "etspy.base.CommonStack.stats", "etspy.base.CommonStack.trans_stack", "etspy.base.RecStack", "etspy.base.RecStack.__init__", "etspy.base.RecStack.plot_slices", "etspy.base.TomoStack", "etspy.base.TomoStack.__init__", "etspy.base.TomoStack.align_other", "etspy.base.TomoStack.filter", "etspy.base.TomoStack.manual_align", "etspy.base.TomoStack.plot_sinos", "etspy.base.TomoStack.recon_error", "etspy.base.TomoStack.reconstruct", "etspy.base.TomoStack.remove_projections", "etspy.base.TomoStack.set_tilts", "etspy.base.TomoStack.stack_register", "etspy.base.TomoStack.test_align", "etspy.base.TomoStack.test_correlation", "etspy.base.TomoStack.tilt_align", "etspy.datasets.get_catalyst_data", "etspy.datasets.get_needle_data", "etspy.io.MismatchedTiltError", "etspy.io.create_stack", "etspy.io.get_dm_tilts", "etspy.io.get_mrc_tilts", "etspy.io.load", "etspy.io.load_serialem", "etspy.io.load_serialem_series", "etspy.io.parse_mdoc", "etspy.io.parse_mrc_header", "etspy.recon.astra_error", "etspy.recon.dart_segment", "etspy.recon.get_dart_boundaries", "etspy.recon.run", "etspy.recon.run_alg", "etspy.recon.run_dart", "etspy.simulation.add_noise", "etspy.simulation.create_catalyst_model", "etspy.simulation.create_cylinder_model", "etspy.simulation.create_model_tilt_series", "etspy.simulation.misalign_stack", "etspy.utils.calc_est_angles", "etspy.utils.calc_golden_ratio_angles", "etspy.utils.filter_stack", "etspy.utils.get_radial_mask", "etspy.utils.multiaverage", "etspy.utils.register_serialem_stack", "etspy.utils.weight_stack", "Examples", "ETSpy"], "titleterms": {"abstract": 23, "align": 0, "anaconda": 80, "basic": 80, "compon": 80, "constructor": [23, 33, 36], "data": 0, "dataset": 0, "enum": 1, "etspi": 80, "exampl": [0, 79], "file": 0, "gener": 0, "higli": 80, "i": 0, "inform": 0, "instal": 80, "jupyt": 80, "method": [0, 1, 23, 33, 36], "note": 0, "o": 0, "option": 80, "pip": 80, "prefer": 80, "project": 80, "recommend": 80, "reconstruct": 0, "relat": 80, "remov": 80, "signal": 0, "simul": 0, "tip": 0, "us": 80, "usag": 80, "util": 0, "valu": 1}})