Search.setIndex({"alltitles": {"API Reference": [[71, "api-reference"]], "Alignment Methods": [[0, "alignment-methods"]], "Anaconda (Preferred):": [[71, "anaconda-preferred"]], "Basic Usage": [[71, "basic-usage"]], "Constructors": [[16, "constructors"], [26, "constructors"], [28, "constructors"]], "Data Simulation": [[0, "data-simulation"]], "Documentation": [[71, "documentation"]], "ETSpy package": [[71, null]], "Example Datasets": [[0, "example-datasets"]], "File I/O": [[0, "file-i-o"]], "Installation": [[71, "installation"]], "Note": [[54, null]], "Optional Jupyter components (higly recommended):": [[71, "optional-jupyter-components-higly-recommended"]], "Primary API": [[0, null]], "Reconstruction": [[0, "reconstruction"]], "Related projects": [[71, "related-projects"]], "Removal": [[71, "removal"]], "Signals": [[0, "signals"]], "Using pip (may be difficult, depending on your system)": [[71, "using-pip-may-be-difficult-depending-on-your-system"]], "Utilities": [[0, "utilities"]], "signals": [[16, null], [26, null], [28, null]]}, "docurls": ["api.html", "api/etspy.align.align_stack.html", "api/etspy.align.align_to_other.html", "api/etspy.align.apply_shifts.html", "api/etspy.align.calc_shifts_cl.html", "api/etspy.align.calc_shifts_com_cl.html", "api/etspy.align.calculate_shifts_com.html", "api/etspy.align.calculate_shifts_conservation_of_mass.html", "api/etspy.align.calculate_shifts_pc.html", "api/etspy.align.calculate_shifts_stackreg.html", "api/etspy.align.get_best_slices.html", "api/etspy.align.get_coms.html", "api/etspy.align.pad_line.html", "api/etspy.align.shift_crop.html", "api/etspy.align.tilt_com.html", "api/etspy.align.tilt_maximage.html", "api/etspy.base.CommonStack.html", "api/etspy.base.CommonStack.__init__.html", "api/etspy.base.CommonStack.change_data_type.html", "api/etspy.base.CommonStack.invert.html", "api/etspy.base.CommonStack.normalize.html", "api/etspy.base.CommonStack.plot.html", "api/etspy.base.CommonStack.save_movie.html", "api/etspy.base.CommonStack.save_raw.html", "api/etspy.base.CommonStack.stats.html", "api/etspy.base.CommonStack.trans_stack.html", "api/etspy.base.RecStack.html", "api/etspy.base.RecStack.plot_slices.html", "api/etspy.base.TomoStack.html", "api/etspy.base.TomoStack.align_other.html", "api/etspy.base.TomoStack.filter.html", "api/etspy.base.TomoStack.manual_align.html", "api/etspy.base.TomoStack.plot_sinos.html", "api/etspy.base.TomoStack.recon_error.html", "api/etspy.base.TomoStack.reconstruct.html", "api/etspy.base.TomoStack.remove_projections.html", "api/etspy.base.TomoStack.set_tilts.html", "api/etspy.base.TomoStack.stack_register.html", "api/etspy.base.TomoStack.test_align.html", "api/etspy.base.TomoStack.test_correlation.html", "api/etspy.base.TomoStack.tilt_align.html", "api/etspy.datasets.get_catalyst_data.html", "api/etspy.datasets.get_needle_data.html", "api/etspy.io.MismatchedTiltError.html", "api/etspy.io.create_stack.html", "api/etspy.io.get_dm_tilts.html", "api/etspy.io.get_mrc_tilts.html", "api/etspy.io.load.html", "api/etspy.io.load_serialem.html", "api/etspy.io.load_serialem_series.html", "api/etspy.io.parse_mdoc.html", "api/etspy.io.parse_mrc_header.html", "api/etspy.recon.astra_error.html", "api/etspy.recon.dart_segment.html", "api/etspy.recon.dask_delayed.html", "api/etspy.recon.get_dart_boundaries.html", "api/etspy.recon.run.html", "api/etspy.recon.run_alg.html", "api/etspy.recon.run_dart.html", "api/etspy.simulation.add_noise.html", "api/etspy.simulation.create_catalyst_model.html", "api/etspy.simulation.create_cylinder_model.html", "api/etspy.simulation.create_model_tilt_series.html", "api/etspy.simulation.misalign_stack.html", "api/etspy.utils.calc_est_angles.html", "api/etspy.utils.calc_golden_ratio_angles.html", "api/etspy.utils.filter_stack.html", "api/etspy.utils.get_radial_mask.html", "api/etspy.utils.multiaverage.html", "api/etspy.utils.register_serialem_stack.html", "api/etspy.utils.weight_stack.html", "index.html"], "envversion": {"sphinx": 63, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1}, "indexentries": {}, "objects": {"etspy.align": [[1, 0, 1, "", "align_stack", "Compute the shifts for spatial registration."], [2, 0, 1, "", "align_to_other", "Spatially register a TomoStack using previously calculated shifts."], [3, 0, 1, "", "apply_shifts", "Apply a series of shifts to a TomoStack."], [4, 0, 1, "", "calc_shifts_cl", "Calculate shifts using the common line method."], [5, 0, 1, "", "calc_shifts_com_cl", "Align stack using combined center of mass and common line methods."], [6, 0, 1, "", "calculate_shifts_com", "Align stack using a center of mass method."], [7, 0, 1, "", "calculate_shifts_conservation_of_mass", "Calculate shifts parallel to the tilt axis using conservation of mass."], [8, 0, 1, "", "calculate_shifts_pc", "Calculate shifts using the phase correlation algorithm."], [9, 0, 1, "", "calculate_shifts_stackreg", "Calculate shifts using PyStackReg."], [10, 0, 1, "", "get_best_slices", "Get best nslices for center of mass analysis."], [11, 0, 1, "", "get_coms", "Calculate the center of mass for indicated slices."], [12, 0, 1, "", "pad_line", "Pad a 1D array for FFT treatment without altering center location."], [13, 0, 1, "", "shift_crop", "Crop shifted stack to common area."], [14, 0, 1, "", "tilt_com", "Perform tilt axis alignment using center of mass (CoM) tracking."], [15, 0, 1, "", "tilt_maximage", "Perform automated determination of the tilt axis of a TomoStack."]], "etspy.align.align_stack": [[1, 1, 2, "", "kwargs", "Compute the shifts for spatial registration."], [1, 1, 2, "p-method", "method", "Method by which to calculate the alignments."], [1, 1, 2, "p-show_progressbar", "show_progressbar", "Enable/disable progress bar"], [1, 1, 2, "p-stack", "stack", "3-D numpy array containing the tilt series data"], [1, 1, 2, "p-start", "start", "Position in tilt series to use as starting point for the alignment. If None, the central projection is used."]], "etspy.align.align_to_other": [[2, 1, 2, "p-other", "other", "TomoStack to be aligned."], [2, 1, 2, "p-stack", "stack", "TomoStack which was previously aligned"]], "etspy.align.apply_shifts": [[3, 1, 2, "p-shifts", "shifts", "The X- and Y-shifts to be applied to each image"], [3, 1, 2, "p-stack", "stack", "The image series to be aligned"]], "etspy.align.calc_shifts_cl": [[4, 1, 2, "p-cl_div_factor", "cl_div_factor", "Factor used to determine number of iterations of alignment."], [4, 1, 2, "p-cl_ref_index", "cl_ref_index", "Tilt index of reference projection."], [4, 1, 2, "p-cl_resolution", "cl_resolution", "Degree of sub-pixel analysis"], [4, 1, 2, "p-stack", "stack", "The stack on which to calculate shifts"]], "etspy.align.calc_shifts_com_cl": [[5, 1, 2, "p-cl_div_factor", "cl_div_factor", "Factor which determines the number of iterations of common line alignment to perform."], [5, 1, 2, "p-cl_ref_index", "cl_ref_index", "Reference slice for common line alignment."], [5, 1, 2, "p-cl_resolution", "cl_resolution", "Resolution for subpixel common line alignment."], [5, 1, 2, "p-com_ref_index", "com_ref_index", "Reference slice for center of mass alignment."], [5, 1, 2, "p-stack", "stack", "Tilt series to be aligned"]], "etspy.align.calculate_shifts_com": [[6, 1, 2, "", "nslices", "Align stack using a center of mass method."], [6, 1, 2, "p-stack", "stack", "The image series to be aligned"]], "etspy.align.calculate_shifts_conservation_of_mass": [[7, 1, 2, "p-p", "p", "Padding element"], [7, 1, 2, "p-stack", "stack", "Tilt series to be aligned."], [7, 1, 2, "p-xrange", "xrange", "Defines range for performing alignment."]], "etspy.align.calculate_shifts_pc": [[8, 1, 2, "", "cuda", "Calculate shifts using the phase correlation algorithm."], [8, 1, 2, "", "show_progressbar", "Calculate shifts using the phase correlation algorithm."], [8, 1, 2, "p-stack", "stack", "The image series to be aligned"], [8, 1, 2, "", "start", "Calculate shifts using the phase correlation algorithm."], [8, 1, 2, "", "upsample_factor", "Calculate shifts using the phase correlation algorithm."]], "etspy.align.calculate_shifts_stackreg": [[9, 1, 2, "", "show_progressbar", "Calculate shifts using PyStackReg."], [9, 1, 2, "p-stack", "stack", "The image series to be aligned"], [9, 1, 2, "", "start", "Calculate shifts using PyStackReg."]], "etspy.align.get_best_slices": [[10, 1, 2, "p-nslices", "nslices", "Number of slices to return."], [10, 1, 2, "p-stack", "stack", "Tilt series from which to select the best slices."]], "etspy.align.get_coms": [[11, 1, 2, "p-slices", "slices", "Location of slices to use for center of mass calculation."], [11, 1, 2, "p-stack", "stack", "Tilt series from which to calculate the centers of mass."]], "etspy.align.pad_line": [[12, 1, 2, "p-line", "line", "The data to be padded"], [12, 1, 2, "p-paddedsize", "paddedsize", "The size of the desired padded data."]], "etspy.align.shift_crop": [[13, 1, 2, "p-stack", "stack", "TomoStack which was previously aligned"]], "etspy.align.tilt_com": [[14, 1, 2, "p-nslices", "nslices", "Nubmer of slices to suer for the analysis"], [14, 1, 2, "p-slices", "slices", "Locations at which to perform the CoM analysis"], [14, 1, 2, "p-stack", "stack", "3-D numpy array containing the tilt series data"]], "etspy.align.tilt_maximage": [[15, 1, 2, "p-also_shift", "also_shift", "If True, also calculate and apply the global shift perpendicular to the tilt by minimizing the sum of the reconstruction"], [15, 1, 2, "p-delta", "delta", "Angular increment for calculation"], [15, 1, 2, "p-limit", "limit", "Maximum rotation angle to use for calculation"], [15, 1, 2, "p-plot_results", "plot_results", "If True, plot the maximum image along with the lines determined by Hough analysis"], [15, 1, 2, "", "shift_limit", "Perform automated determination of the tilt axis of a TomoStack."], [15, 1, 2, "p-stack", "stack", "3-D numpy array containing the tilt series data"]], "etspy.base": [[16, 2, 1, "", "CommonStack", "Create a CommonStack object for tomography data."], [26, 2, 1, "", "RecStack", "Create a RecStack object for tomography data."], [28, 2, 1, "", "TomoStack", "Create a TomoStack object for tomography data."]], "etspy.base.CommonStack": [[17, 3, 1, "", "__init__", "Create a signal instance."], [18, 3, 1, "", "change_data_type", "Change data type."], [19, 3, 1, "", "invert", "Invert the contrast levels of an entire Stack."], [20, 3, 1, "", "normalize", "Normalize the contrast levels of an entire Stack."], [21, 3, 1, "", "plot", "Plot function to set default navigator to 'slider'."], [22, 3, 1, "", "save_movie", "Save the Stack as an AVI movie file."], [23, 3, 1, "", "save_raw", "Save Stack data as a .raw/.rpl file pair."], [24, 3, 1, "", "stats", "Print basic stats about Stack data to terminal."], [25, 3, 1, "", "trans_stack", "Transform the stack using the skimage Affine transform."]], "etspy.base.CommonStack.__init__": [[17, 1, 2, "", "args", "Create a signal instance."], [17, 1, 2, "", "kwargs", "Create a signal instance."]], "etspy.base.CommonStack.change_data_type": [[18, 1, 2, "", "dtype", "Change data type."]], "etspy.base.CommonStack.normalize": [[20, 1, 2, "p-width", "width", "Number of standard deviations from the mean to set as maximum intensity level."]], "etspy.base.CommonStack.plot": [[21, 1, 2, "", "args", "Plot function to set default navigator to 'slider'."], [21, 1, 2, "", "kwargs", "Plot function to set default navigator to 'slider'."], [21, 1, 2, "", "navigator", "Plot function to set default navigator to 'slider'."]], "etspy.base.CommonStack.save_movie": [[22, 1, 2, "p-axis", "axis", "Projection axis for the output movie. Must be 'XY' (default), 'YZ' , or 'XZ'"], [22, 1, 2, "p-clim", "clim", "Upper and lower contrast limit to use for movie"], [22, 1, 2, "p-cmap", "cmap", "Matplotlib colormap to use for movie"], [22, 1, 2, "p-dpi", "dpi", "Resolution to save the images in the movie."], [22, 1, 2, "p-fps", "fps", "Number of frames per second at which to create the movie."], [22, 1, 2, "p-outfile", "outfile", "Filename for output."], [22, 1, 2, "p-start", "start", "Filename for output."], [22, 1, 2, "p-stop", "stop", "Filename for output."], [22, 1, 2, "p-title", "title", "Title to add at the top of the movie"]], "etspy.base.CommonStack.save_raw": [[23, 1, 2, "", "filename", "Save Stack data as a .raw/.rpl file pair."]], "etspy.base.CommonStack.trans_stack": [[25, 1, 2, "p-angle", "angle", "Angle in degrees by which to rotate the stack about the X-Y plane"], [25, 1, 2, "p-interpolation", "interpolation", "Mode of interpolation to employ."], [25, 1, 2, "p-xshift", "xshift", "Number of pixels by which to shift in the X dimension"], [25, 1, 2, "p-yshift", "yshift", "Number of pixels by which to shift the stack in the Y dimension"]], "etspy.base.RecStack": [[27, 3, 1, "", "plot_slices", "Plot slices along all three axes of a reconstruction stack."]], "etspy.base.RecStack.plot_slices": [[27, 1, 2, "p-vmax_std", "vmax_std", "Number of standard deviations from mean to use for scaling the displayed slices"], [27, 1, 2, "p-vmin_std", "vmin_std", "Number of standard deviations from mean to use for scaling the displayed slices"], [27, 1, 2, "p-xslice", "xslice", "Indices of slices to plot"], [27, 1, 2, "p-yslice", "yslice", "Indices of slices to plot"], [27, 1, 2, "p-zslice", "zslice", "Indices of slices to plot"]], "etspy.base.TomoStack": [[29, 3, 1, "", "align_other", "Apply the alignment calculated for one dataset to another."], [30, 3, 1, "", "filter", "Apply one of several image filters to an entire TomoStack."], [31, 3, 1, "", "manual_align", "Manually shift one portion of a stack with respect to the other."], [32, 3, 1, "", "plot_sinos", "Plot the TomoStack in sinogram orientation."], [33, 3, 1, "", "recon_error", "Determine the optimum number of iterations for reconstruction."], [34, 3, 1, "", "reconstruct", "Reconstruct a TomoStack series using one of the available methods."], [35, 3, 1, "", "remove_projections", "Remove projections from tilt series."], [36, 3, 1, "", "set_tilts", "Calibrate the tilt axis of the image stack."], [37, 3, 1, "", "stack_register", "Register stack spatially."], [38, 3, 1, "", "test_align", "Reconstruct three slices from the input data for visual inspection."], [39, 3, 1, "", "test_correlation", "Test output of cross-correlation prior to alignment."], [40, 3, 1, "", "tilt_align", "Align the tilt axis of a TomoStack."]], "etspy.base.TomoStack.align_other": [[29, 1, 2, "p-other", "other", "The tilt series which is to be aligned using the previously calculated parameters."]], "etspy.base.TomoStack.filter": [[30, 1, 2, "p-method", "method", "Type of filter to apply."], [30, 1, 2, "p-size", "size", "Size of filtering neighborhood."], [30, 1, 2, "p-taper", "taper", "Fraction of image size to pad to the mean."]], "etspy.base.TomoStack.manual_align": [[31, 1, 2, "p-display", "display", "If True, display the result."], [31, 1, 2, "p-nslice", "nslice", "Slice position at which to implement shift"], [31, 1, 2, "p-xshift", "xshift", "Number of pixels with which to shift the second portion of the stack relative to the first in the X dimension."], [31, 1, 2, "p-yshift", "yshift", "Number of pixels with which to shift the second portion of the stack relative to the first in the Y dimension."]], "etspy.base.TomoStack.plot_sinos": [[32, 1, 2, "", "args", "Plot the TomoStack in sinogram orientation."], [32, 1, 2, "", "kwargs", "Plot the TomoStack in sinogram orientation."]], "etspy.base.TomoStack.recon_error": [[33, 1, 2, "p-algorithm", "algorithm", "Reconstruction algorithm use."], [33, 1, 2, "p-constrain", "constrain", "If True, perform SIRT reconstruction with a non-negativity constraint."], [33, 1, 2, "p-cuda", "cuda", "If True, perform reconstruction using the GPU-accelrated algorithm. Default is True"], [33, 1, 2, "", "iterations", "Determine the optimum number of iterations for reconstruction."], [33, 1, 2, "p-nslice", "nslice", "Location at which to perform the evaluation."], [33, 1, 2, "p-thresh", "thresh", "Value above which to constrain the reconstructed data"]], "etspy.base.TomoStack.reconstruct": [[34, 1, 2, "p-constrain", "constrain", "If True, output reconstruction is constrained above value given by 'thresh'"], [34, 1, 2, "p-cuda", "cuda", "If True, use the CUDA-accelerated reconstruction algorithm"], [34, 1, 2, "p-iterations", "iterations", "Number of iterations for the SIRT reconstruction (for astraSIRT and astraSIRT_GPU, methods only) (default: 5)"], [34, 1, 2, "", "kwargs", "Reconstruct a TomoStack series using one of the available methods."], [34, 1, 2, "p-method", "method", "Reconstruction algorithm to use."], [34, 1, 2, "p-p", "p", "Probability for setting free pixels in DART reconstruction (only used if the reconstruction method is DART, default: 0.99)"], [34, 1, 2, "p-show_progressbar", "show_progressbar", "If True, show a progress bar for the reconstruction."], [34, 1, 2, "p-thickness", "thickness", "Size of the output volume (in pixels) in the projection direction."], [34, 1, 2, "p-thresh", "thresh", "Value above which to constrain the reconstructed data"]], "etspy.base.TomoStack.remove_projections": [[35, 1, 2, "p-projections", "projections", "List of projection indices in integers to remove"]], "etspy.base.TomoStack.set_tilts": [[36, 1, 2, "p-increment", "increment", "Tilt increment between images"], [36, 1, 2, "p-start", "start", "Tilt angle of first image in stack"]], "etspy.base.TomoStack.stack_register": [[37, 1, 2, "p-crop", "crop", "If True, crop aligned stack to eliminate border pixels."], [37, 1, 2, "", "kwargs", "Register stack spatially."], [37, 1, 2, "p-method", "method", "Algorithm to use for registration calculation."], [37, 1, 2, "p-show_progressbar", "show_progressbar", "Enable/disable progress bar"], [37, 1, 2, "p-start", "start", "Position in tilt series to use as starting point for the alignment."]], "etspy.base.TomoStack.test_align": [[38, 1, 2, "", "constrain", "Reconstruct three slices from the input data for visual inspection."], [38, 1, 2, "p-cuda", "cuda", "If True, use CUDA-accelerated Astra algorithms."], [38, 1, 2, "", "iterations", "Reconstruct three slices from the input data for visual inspection."], [38, 1, 2, "p-method", "method", "Reconstruction algorithm to use."], [38, 1, 2, "p-slices", "slices", "Position of slices to use for the reconstruction."], [38, 1, 2, "p-thickness", "thickness", "Size of the output volume (in pixels) in the projection direction."], [38, 1, 2, "p-thresh", "thresh", "Minimum value for reconstruction"], [38, 1, 2, "", "tilt_rotation", "Reconstruct three slices from the input data for visual inspection."], [38, 1, 2, "", "tilt_shift", "Reconstruct three slices from the input data for visual inspection."], [38, 1, 2, "p-vmax_std", "vmax_std", "Number of standard deviations from mean to use for scaling the displayed slices"], [38, 1, 2, "p-vmin_std", "vmin_std", "Number of standard deviations from mean to use for scaling the displayed slices"]], "etspy.base.TomoStack.test_correlation": [[39, 1, 2, "p-images", "images", "List of two numbers indicating which projections to cross-correlate"]], "etspy.base.TomoStack.tilt_align": [[40, 1, 2, "", "kwargs", "Align the tilt axis of a TomoStack."], [40, 1, 2, "p-method", "method", "Algorithm to use for registration alignment."]], "etspy.datasets": [[41, 0, 1, "", "get_catalyst_data", "Load a model-simulated catalyst tilt series."], [42, 0, 1, "", "get_needle_data", "Load an experimental tilt series of needle-shaped specimen."]], "etspy.datasets.get_catalyst_data": [[41, 1, 2, "p-maxshift", "maxshift", "Upper bound for random shifts"], [41, 1, 2, "p-minshift", "minshift", "Lower bound for random shifts"], [41, 1, 2, "p-misalign", "misalign", "If True, apply random shifts to each projection to simulated drift"], [41, 1, 2, "p-noise", "noise", "If True, add Gaussian noise to the stack"], [41, 1, 2, "p-noise_factor", "noise_factor", "Percentage noise to be added."], [41, 1, 2, "", "tiltrotate", "Load a model-simulated catalyst tilt series."], [41, 1, 2, "p-tiltshift", "tiltshift", "Number of pixels by which to shift entire tilt series."], [41, 1, 2, "", "yonly", "Load a model-simulated catalyst tilt series."]], "etspy.datasets.get_needle_data": [[42, 1, 2, "", "aligned", "Load an experimental tilt series of needle-shaped specimen."]], "etspy.io": [[43, 4, 1, "", "MismatchedTiltError", "Error for when number of tilts in signal does not match tilt dimension."], [44, 0, 1, "", "create_stack", "Create a TomoStack from existing in-memory tilt series data."], [45, 0, 1, "", "get_dm_tilts", "Extract tilts from DM tags."], [46, 0, 1, "", "get_mrc_tilts", "Extract tilts from an MRC file."], [47, 0, 1, "", "load", "Create a TomoStack object using data from a file."], [48, 0, 1, "", "load_serialem", "Load a multi-frame series collected by SerialEM."], [49, 0, 1, "", "load_serialem_series", "Load a multi-frame series collected by SerialEM."], [50, 0, 1, "", "parse_mdoc", "Parse experimental parameters from a SerialEM MDOC file."], [51, 0, 1, "", "parse_mrc_header", "Read the mrc header and return as dictionary."]], "etspy.io.create_stack": [[44, 1, 2, "p-stack", "stack", "Tilt series data (ntilts, ny, nx)"], [44, 1, 2, "p-tilts", "tilts", "An (optional) array defining the tilt angles"]], "etspy.io.get_dm_tilts": [[45, 1, 2, "p-s", "s", "A HyperSpy or ETSpy signal containing DigitalMigrograph metadata tags"]], "etspy.io.get_mrc_tilts": [[46, 1, 2, "p-filename", "filename", "Name of MRC file from which to extract tilts"], [46, 1, 2, "p-stack", "stack", "A HyperSpy or TomoStack signal"]], "etspy.io.load": [[47, 1, 2, "p-filename", "filename", "Name of file that contains data to be read. Accepted formats (.MRC, .DM3, .DM4)"], [47, 1, 2, "p-mdocs", "mdocs", "List of mdoc files for SerialEM data (optional)"], [47, 1, 2, "p-tilts", "tilts", "List of floats indicating the specimen tilt at each projection (optional)"]], "etspy.io.load_serialem": [[48, 1, 2, "", "mdocfile", "Load a multi-frame series collected by SerialEM."], [48, 1, 2, "", "mrcfile", "Load a multi-frame series collected by SerialEM."]], "etspy.io.load_serialem_series": [[49, 1, 2, "", "mdocfiles", "Load a multi-frame series collected by SerialEM."], [49, 1, 2, "", "mrcfiles", "Load a multi-frame series collected by SerialEM."]], "etspy.io.parse_mdoc": [[50, 1, 2, "p-mdoc_file", "mdoc_file", "Name of a SerialEM MDOC file"], [50, 1, 2, "p-series", "series", "If True, the MDOC files originated from a multiscan SerialEM acquisition. If False, the files originated from a single scan SerialEM acquisition."]], "etspy.io.parse_mrc_header": [[51, 1, 2, "p-filename", "filename", "Name of the MRC file to parse"]], "etspy.recon": [[52, 0, 1, "", "astra_error", "Perform SIRT reconstruction using the Astra toolbox algorithms."], [53, 0, 1, "", "dart_segment", "Segmentation step for DART Reconstruction."], [54, 0, 1, "", "dask_delayed", "Wraps a function or object to produce a Delayed."], [55, 0, 1, "", "get_dart_boundaries", "Boundary step for DART Reconstruction."], [56, 0, 1, "", "run", "Perform reconstruction of input tilt series."], [57, 0, 1, "", "run_alg", "Run CPU-based FBP, SIRT, or SART reconstruction algorithm using dask."], [58, 0, 1, "", "run_dart", "Run discrete algebraic reoncsturction technique (DART) algorithm."]], "etspy.recon.astra_error": [[52, 1, 2, "p-angles", "angles", "Projection angles in degrees."], [52, 1, 2, "p-constrain", "constrain", "If True, output reconstruction is constrained above value given by 'thresh'."], [52, 1, 2, "p-cuda", "cuda", "If True, use the CUDA-accelerated Astra algorithms."], [52, 1, 2, "p-iterations", "iterations", "Number of iterations for the SIRT reconstruction."], [52, 1, 2, "p-method", "method", "Reconstruction algorithm use."], [52, 1, 2, "p-sinogram", "sinogram", "Tilt series data either of the form [angles, x] or [angles, y, x] where y is the tilt axis and x is the projection axis."], [52, 1, 2, "p-thresh", "thresh", "Value above which to constrain the reconstructed data if 'constrain' is True."]], "etspy.recon.dart_segment": [[53, 1, 2, "p-gray_vals", "gray_vals", "Grayscale values to assign the segmented regions."], [53, 1, 2, "p-rec", "rec", "Tomographic reconstruction."], [53, 1, 2, "p-thresholds", "thresholds", "Threshold values for segmentation."]], "etspy.recon.dask_delayed": [[54, 1, 2, "p-name", "name", "The key to use in the underlying graph for the wrapped object."], [54, 1, 2, "p-nout", "nout", "The number of outputs returned from calling the resulting Delayed object."], [54, 1, 2, "p-obj", "obj", "The function or object to wrap"], [54, 1, 2, "p-pure", "pure", "Indicates whether calling the resulting Delayed object is a pure operation."], [54, 1, 2, "p-traverse", "traverse", "By default dask traverses builtin python collections looking for dask objects passed to delayed."]], "etspy.recon.get_dart_boundaries": [[55, 1, 2, "p-segmented", "segmented", "Segmented reconstruction."]], "etspy.recon.run": [[56, 1, 2, "p-bp_filter", "bp_filter", "Filter to use for filtered backprojection"], [56, 1, 2, "p-constrain", "constrain", "If True, output reconstruction is constrained above value given by 'thresh'"], [56, 1, 2, "p-cuda", "cuda", "If True, use the CUDA-accelerated Astra algorithms."], [56, 1, 2, "p-dart_iterations", "dart_iterations", "Number of DART iterations"], [56, 1, 2, "p-gray_levels", "gray_levels", "Gray levels for DART reconstruction"], [56, 1, 2, "p-method", "method", "Reconstruction algorithm to use."], [56, 1, 2, "p-ncores", "ncores", "Number of cores to use for multithreaded CPU-based reconstructions"], [56, 1, 2, "p-niterations", "niterations", "Number of iterations for reconstruction"], [56, 1, 2, "p-p", "p", "Probability for setting free pixels in DART reconstruction"], [56, 1, 2, "p-show_progressbar", "show_progressbar", "If True, show a progress bar for the reconstruction."], [56, 1, 2, "p-stack", "stack", "TomoStack containing the input tilt series"], [56, 1, 2, "p-thickness", "thickness", "Limit for the height of the reconstruction"], [56, 1, 2, "p-thresh", "thresh", "Value above which to constrain the reconstructed data"]], "etspy.recon.run_alg": [[57, 1, 2, "p-cfg", "cfg", "ASTRA algorithm configuration"], [57, 1, 2, "p-iters", "iters", "Number of iterations for the reconstruction"], [57, 1, 2, "p-proj_geom", "proj_geom", "ASTRA projection geometry"], [57, 1, 2, "p-sino", "sino", "Sinogram of shape (nangles, ny)"], [57, 1, 2, "p-vol_geom", "vol_geom", "ASTRA volume geometry"]], "etspy.recon.run_dart": [[58, 1, 2, "p-cfg", "cfg", "ASTRA algorithm configuration"], [58, 1, 2, "p-dart_iters", "dart_iters", "Number of iterations for the DART reconstruction"], [58, 1, 2, "p-gray_levels", "gray_levels", "Gray levels for DART reconstruction"], [58, 1, 2, "p-iters", "iters", "Number of iterations for the SART reconstruction"], [58, 1, 2, "p-p", "p", "Probability for free pixel determination"], [58, 1, 2, "p-proj_geom", "proj_geom", "ASTRA projection geometry"], [58, 1, 2, "p-sino", "sino", "Sinogram of shape (nangles, ny)"], [58, 1, 2, "p-thresholds", "thresholds", "Thresholds for DART reconstruction"], [58, 1, 2, "p-vol_geom", "vol_geom", "ASTRA volume geometry"]], "etspy.simulation": [[59, 0, 1, "", "add_noise", "Apply misalignment to a model tilt series."], [60, 0, 1, "", "create_catalyst_model", "Create a model data array that mimics a hetergeneous catalyst."], [61, 0, 1, "", "create_cylinder_model", "Create a model data array that mimics a needle shaped sample."], [62, 0, 1, "", "create_model_tilt_series", "Create a tilt series from a 3D volume."], [63, 0, 1, "", "misalign_stack", "Apply misalignment to a model tilt series."]], "etspy.simulation.add_noise": [[59, 1, 2, "p-noise_type", "noise_type", "Type of noise."], [59, 1, 2, "", "scale_factor", "Apply misalignment to a model tilt series."], [59, 1, 2, "p-stack", "stack", "TomoStack simluation"]], "etspy.simulation.create_catalyst_model": [[60, 1, 2, "p-nparticles", "nparticles", "Number of particles to add"], [60, 1, 2, "p-particle_density", "particle_density", "Grayscale value to assign to the particles"], [60, 1, 2, "p-size_interval", "size_interval", "Lower and upper bounds (in that order) of the particle size"], [60, 1, 2, "p-support_density", "support_density", "Grayscale value to assign to the support"], [60, 1, 2, "p-support_radius", "support_radius", "Radius (in pixels) of the support"], [60, 1, 2, "p-volsize", "volsize", "X, Y, Z shape (in that order) of the volume"]], "etspy.simulation.create_cylinder_model": [[61, 1, 2, "p-add_others", "add_others", "If True, add a second and third cylinder to the model near the periphery. This is useful for testing the effects of additional objects entering the tilt series field of view."], [61, 1, 2, "p-blur", "blur", "If True, apply a Gaussian blur to the volume"], [61, 1, 2, "p-blur_sigma", "blur_sigma", "Sigma value for the Gaussiuan blur"], [61, 1, 2, "p-radius", "radius", "Radius of the cylinder to create"]], "etspy.simulation.create_model_tilt_series": [[62, 1, 2, "p-angles", "angles", "Projection angles for tilt series in degrees"], [62, 1, 2, "", "cuda", "Create a tilt series from a 3D volume."], [62, 1, 2, "p-model", "model", "3D array or signal containing the model volume to project to a tilt series"]], "etspy.simulation.misalign_stack": [[63, 1, 2, "p-interp_order", "interp_order", "The order of spline interpolation used by the scipy.ndimage.shift() or :py:function:`scipy.ndimage.rotate` function. The order must be in the range 0-5."], [63, 1, 2, "p-max_shift", "max_shift", "Maximum amount of jitter to apply to the stack"], [63, 1, 2, "p-min_shift", "min_shift", "Minimum amount of jitter to apply to the stack"], [63, 1, 2, "p-stack", "stack", "TomoStack simluation"], [63, 1, 2, "p-tilt_rotate", "tilt_rotate", "Amount of rotation to apply to the stack"], [63, 1, 2, "p-tilt_shift", "tilt_shift", "Number of pixels by which to offset the tilt axis from the center"], [63, 1, 2, "p-y_only", "y_only", "If True, limit the application of jitter to the x-direction only. Default is False"]], "etspy.utils": [[64, 0, 1, "", "calc_est_angles", "Caculate angles used for equally sloped tomography (EST)."], [65, 0, 1, "", "calc_golden_ratio_angles", "Calculate golden ratio angles for a given tilt range."], [66, 0, 1, "", "filter_stack", "Apply a Fourier filter to a sinogram or series of sinograms."], [67, 0, 1, "", "get_radial_mask", "Calculate a radial mask given a shape and center position."], [68, 0, 1, "", "multiaverage", "Register a multi-frame series collected by SerialEM."], [69, 0, 1, "", "register_serialem_stack", "Register a multi-frame series collected by SerialEM."], [70, 0, 1, "", "weight_stack", "Apply a weighting window to a stack perpendicular to the tilt axis."]], "etspy.utils.calc_est_angles": [[64, 1, 2, "p-num_points", "num_points", "Number of points in scan."]], "etspy.utils.calc_golden_ratio_angles": [[65, 1, 2, "p-nangles", "nangles", "Number of angles to calculate."], [65, 1, 2, "p-tilt_range", "tilt_range", "Tilt range in degrees."]], "etspy.utils.filter_stack": [[66, 1, 2, "p-cutoff", "cutoff", "Factor of sampling rate to use as the cutoff."], [66, 1, 2, "p-filter_name", "filter_name", "Type of filter to apply."], [66, 1, 2, "p-stack", "stack", "TomoStack with projection data"]], "etspy.utils.get_radial_mask": [[67, 1, 2, "p-center", "center", "Location of mask center (x,y)."], [67, 1, 2, "p-mask_shape", "mask_shape", "Shape (rows, cols) of the resulting mask."]], "etspy.utils.multiaverage": [[68, 1, 2, "p-nframes", "nframes", "Number of frames per tilt."], [68, 1, 2, "p-nx", "nx", "Pixels in x-dimension."], [68, 1, 2, "p-ny", "ny", "Pixels in y-dimension."], [68, 1, 2, "p-stack", "stack", "Array of shape [nframes, ny, nx]."]], "etspy.utils.register_serialem_stack": [[69, 1, 2, "", "ncpus", "Register a multi-frame series collected by SerialEM."], [69, 1, 2, "p-stack", "stack", "Signal of shape [ntilts, nframes, ny, nx]."]], "etspy.utils.weight_stack": [[70, 1, 2, "p-accuracy", "accuracy", "A string indicating the accuracy level for weighting."], [70, 1, 2, "p-stack", "stack", "The stack to be weighted."]]}, "objnames": {"0": ["py", "function", "Python function"], "1": ["py", "parameter", "Python parameter"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "exception", "Python exception"]}, "objtypes": {"0": "py:function", "1": "py:parameter", "2": "py:class", "3": "py:method", "4": "py:exception"}, "terms": {"": [0, 45, 54], "0": [0, 5, 6, 15, 16, 25, 26, 27, 28, 30, 31, 33, 34, 37, 38, 41, 52, 54, 56, 59, 63, 66], "000156": 1, "0005": [1, 70], "015": [1, 70], "05": [5, 37], "052103": 64, "1": [0, 1, 6, 15, 27, 28, 30, 37, 38, 41, 54, 61, 65, 69, 70], "10": [0, 1, 15, 25, 38, 54, 58, 64, 65, 70], "100": [16, 22, 26, 28, 40, 60], "1038": 1, "11": [1, 54, 70], "1103": 64, "1109": [1, 58], "1117": 65, "1186": [1, 70], "12": 60, "120": 34, "121": 34, "123201": 65, "1364": 1, "15": [0, 16, 22, 25, 26, 28, 60], "156": 1, "158": 1, "160": 40, "1998": 1, "1d": [0, 12], "2": [1, 25, 34, 38, 41, 54, 59], "20": [0, 7, 15, 56], "200": 60, "2005": 64, "2008": 1, "2011": [58, 65], "2012": 1, "2015": [1, 70], "2131661": 58, "255": 60, "256": 25, "27": 1, "3": [1, 14, 15, 16, 20, 25, 26, 28, 38, 54, 63], "30": [0, 61], "33": 1, "3660298": 65, "3d": [0, 52, 62], "3dce7c56edd1ac2614add714086e950f": 54, "4": [1, 38], "41": 1, "444": 1, "447": 1, "483": 1, "5": [5, 25, 27, 28, 30, 33, 34, 37, 41, 60, 61, 63, 66], "50": [28, 33, 38, 40, 52, 65], "55af65871cb378a4fa6de1660c3e8fb7": 54, "600": 60, "650848": 1, "7": [1, 70], "72": 64, "77": 25, "8": [5, 37], "83": 1, "99": [34, 56], "A": [1, 17, 40, 44, 45, 46, 50, 58, 65, 70, 71], "As": [54, 70], "By": 54, "For": [54, 71], "If": [1, 4, 5, 6, 15, 17, 22, 23, 31, 33, 34, 37, 38, 41, 50, 52, 54, 56, 61, 63], "In": [54, 71], "It": 17, "The": [1, 3, 4, 6, 8, 9, 12, 15, 17, 29, 47, 49, 54, 63, 70, 71], "Then": 6, "To": [54, 71], "__init__": [16, 54], "__no__default__": [0, 54], "_n": 54, "_signal": [0, 16], "abl": 71, "about": [16, 24, 25, 26, 28], "abov": [33, 34, 52, 56], "acceler": [34, 38, 52, 56], "accelr": 33, "accept": [47, 54], "access": 54, "accuraci": [0, 70], "acquisit": 50, "act": 54, "activ": 71, "ad": 41, "adapt": 58, "add": [22, 41, 54, 59, 60, 61], "add_nois": [0, 59], "add_oth": 61, "addit": [34, 40, 61], "advanc": [1, 70], "affect": 54, "affin": [16, 25, 26, 28], "afmhot": 22, "after": [3, 5, 14, 71], "al": 1, "algebra": [0, 58], "algebraic": 34, "algorithm": [0, 1, 8, 28, 33, 34, 37, 38, 40, 52, 56, 57, 58], "ali": 40, "alig": [1, 71], "align": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 28, 29, 33, 34, 37, 39, 40, 42, 69, 70, 71], "align_oth": [28, 29], "align_stack": [0, 1, 37], "align_to_oth": [0, 2], "all": [5, 16, 17, 26, 27, 37, 54, 68], "allow": [54, 71], "along": [10, 15, 26, 27, 40, 41], "alreadi": 16, "also": [15, 40, 54], "also_shift": [15, 40], "alter": [0, 12], "alwai": 54, "amount": [59, 63], "an": [0, 14, 16, 17, 19, 20, 22, 26, 28, 30, 40, 42, 44, 46, 50, 51, 54], "analysi": [0, 4, 6, 10, 14, 15, 40], "analyz": 40, "angl": [0, 15, 16, 25, 26, 28, 36, 38, 40, 41, 44, 45, 46, 52, 62, 64, 65], "angular": [15, 40], "ani": [0, 17, 51, 54, 70], "anoth": [28, 29], "append": 23, "appli": [0, 1, 3, 6, 8, 9, 15, 28, 29, 30, 41, 54, 59, 61, 63, 66, 70], "applic": 63, "apply_shift": [0, 3], "approach": [1, 40, 71], "ar": [1, 3, 5, 6, 7, 10, 16, 17, 25, 37, 38, 40, 41, 54, 70, 71], "area": [0, 13], "arg": [16, 17, 21, 26, 28, 32], "argument": [34, 40, 54], "arrai": [0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 14, 15, 17, 29, 44, 52, 53, 55, 56, 57, 58, 60, 61, 62, 64, 65, 67, 68], "array_lik": 54, "arraylik": 46, "assess": 37, "assign": [53, 60], "associ": 71, "assum": [54, 71], "astra": [0, 38, 52, 56, 57, 58, 71], "astra_error": [0, 52], "astrasirt": 34, "astrasirt_gpu": 34, "attempt": 54, "attribut": [16, 17, 54], "attributeerror": 54, "auto": 71, "autom": [0, 15, 40], "avail": [28, 34, 40, 71], "averag": [49, 68, 69], "avi": [16, 22, 26, 28], "avoid": 54, "ax": [17, 26, 27], "axesmanag": 17, "axi": [0, 1, 4, 5, 6, 7, 10, 14, 15, 16, 22, 26, 28, 29, 36, 40, 41, 52, 63, 70], "b": [54, 64, 65], "backproject": [34, 56], "bar": [1, 34, 37, 56], "base": [0, 1, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 52, 54, 56, 57, 70, 71], "basic": [16, 24, 26, 28], "batenburg": 58, "becaus": 54, "been": [17, 29], "behavior": 54, "below": [33, 54], "best": [0, 10], "between": [1, 33, 36, 37, 41], "blur": [0, 61], "blur_sigma": 61, "bool": [0, 17, 31, 34, 38, 40, 41, 42, 50, 54, 56, 61, 63], "boolean": [1, 15, 33, 34, 37, 52, 56], "border": 37, "both": 30, "bound": [41, 60], "boundari": [0, 55], "bp_filter": 56, "bpf": 30, "bring": 71, "build": 54, "builtin": 54, "c": [1, 71], "cacul": [0, 64], "calc_est_angl": [0, 64], "calc_golden_ratio_angl": [0, 65], "calc_shifts_cl": [0, 4], "calc_shifts_com_cl": [0, 5], "calcul": [0, 1, 2, 4, 7, 8, 9, 11, 15, 28, 29, 37, 40, 65, 67], "calculate_shifts_com": [0, 6], "calculate_shifts_conservation_of_mass": [0, 7], "calculate_shifts_pc": [0, 8], "calculate_shifts_stackreg": [0, 9], "calibr": [28, 36], "call": 54, "callabl": 54, "can": [17, 40, 54, 71], "case": 17, "catalyst": [0, 41, 42, 60], "center": [0, 1, 5, 6, 10, 11, 12, 14, 37, 40, 63, 67, 70], "central": [1, 37], "cfg": [0, 57, 58], "chang": [16, 18, 26, 28, 33, 71], "change_data_typ": [16, 18, 26, 28], "change_dtyp": 18, "check": 54, "chemic": [1, 70], "chosen": [4, 5, 37, 38], "cl": [1, 37], "cl_div_factor": [4, 5, 37], "cl_ref_index": [0, 4, 5, 37], "cl_resolut": [0, 4, 5, 37], "class": [0, 16, 17, 26, 28, 54], "clim": 22, "closest": 4, "cmap": 22, "code": [1, 58, 71], "col": 67, "collect": [0, 48, 49, 54, 68, 69], "colormap": 22, "com": [0, 1, 11, 14, 37, 40, 71], "com_ref_index": [0, 5, 37], "combin": [0, 1, 5, 15, 37, 40, 54], "common": [0, 1, 4, 5, 13, 37], "commonstack": [0, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28], "compar": 14, "compil": 71, "comput": [0, 1, 54], "conda": 71, "config": 54, "configur": [57, 58], "consequ": 54, "conserv": [0, 7], "consist": 54, "constrain": [28, 33, 34, 38, 52, 56], "constraint": [33, 34], "contain": [1, 14, 15, 17, 33, 34, 41, 42, 44, 45, 47, 48, 49, 50, 52, 54, 56, 62], "content": 54, "contextu": 54, "contrast": [16, 19, 20, 22, 26, 28, 54], "convers": 18, "copi": [1, 2, 3, 5, 13, 14, 19, 20, 25, 30, 35, 37, 40, 59, 63], "core": 56, "correl": [0, 1, 8, 28, 37, 39], "correspond": 66, "count": 54, "count_2": 54, "cpu": [0, 52, 56, 57], "creat": [0, 16, 17, 22, 26, 28, 44, 47, 60, 61, 62, 71], "create_catalyst_model": [0, 60], "create_cylinder_model": [0, 61], "create_model_tilt_seri": [0, 62], "create_stack": [0, 44], "creation": 54, "crop": [0, 13, 37], "cross": [28, 39], "cubic": 25, "cuda": [8, 33, 34, 38, 52, 56, 62, 71], "cutoff": 66, "cylind": [14, 40, 61], "d": [1, 14, 15, 19, 20, 25, 30, 33, 34, 37, 40, 54], "dart": [0, 34, 53, 55, 56, 58], "dart_it": [0, 58], "dart_iter": [34, 56], "dart_seg": [0, 53], "dask": [0, 54, 57], "dask_delai": [0, 54], "dask_key_nam": 54, "data": [1, 6, 12, 14, 15, 16, 17, 18, 23, 24, 26, 28, 29, 33, 34, 38, 44, 47, 48, 49, 52, 54, 56, 60, 61, 62, 66, 71], "dataset": [19, 20, 25, 28, 29, 30, 33, 34, 37, 40, 41, 42, 71], "decor": 54, "deepcopi": 34, "def": 54, "default": [5, 16, 17, 21, 22, 25, 26, 28, 33, 34, 37, 52, 54, 56, 63, 66, 70], "defin": [7, 16, 17, 44], "degre": [4, 25, 40, 52, 62, 64, 65], "delai": [0, 54], "delayed_pur": 54, "delta": [0, 15, 40], "demo": 71, "depend": 54, "describ": [1, 54, 70], "descript": 54, "desir": 12, "detail": [17, 37, 71], "detect": 40, "determin": [0, 1, 4, 5, 6, 15, 28, 33, 37, 40, 54, 58, 70], "determinist": 54, "deviat": [20, 27, 38], "dict": [0, 17, 50, 51, 57, 58], "dictionari": [0, 17, 50, 51], "differ": [1, 33, 54, 71], "digitalmigrograph": 45, "dimens": [0, 4, 17, 23, 25, 31, 43, 68], "direct": [34, 38, 63], "disabl": [1, 37], "discreat": 34, "discret": [0, 58], "displai": [27, 28, 31, 38], "dm": [0, 45], "dm3": 47, "dm4": 47, "do": 54, "docstr": [37, 71], "document": 17, "doe": [0, 17, 43], "doesn": 54, "doi": [1, 58, 64, 65, 70], "done": 54, "dpi": [16, 22, 26, 28], "drift": 41, "dtype": [16, 18, 26, 28], "e": [1, 54], "each": [3, 4, 6, 8, 9, 11, 33, 40, 41, 47, 49, 69], "edg": [40, 70], "effect": [61, 70], "effici": 1, "either": [17, 25, 37, 40, 52, 56], "electron": [1, 70, 71], "element": 7, "elimin": 37, "emploi": 25, "empti": 54, "enabl": [1, 37, 71], "eng": 65, "ensur": [54, 71], "enter": 61, "entir": [16, 19, 20, 26, 28, 30, 41], "environ": 71, "equal": [0, 6, 64], "equival": 25, "error": [0, 33, 40, 43, 54], "est": [0, 64], "et": 1, "etspi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70], "etspygraphi": 71, "evalu": 33, "exampl": [19, 20, 25, 30, 33, 34, 37, 40, 54, 71], "except": [0, 43], "execut": 54, "exist": [0, 44, 54], "expect": [14, 40, 54], "expens": 54, "experiment": [0, 42, 50], "explicitli": 54, "extens": 71, "extract": [0, 45, 46], "f": 64, "factor": [4, 5, 37, 59, 66], "fail": 54, "fallback": 54, "fals": [0, 15, 28, 31, 34, 37, 40, 41, 42, 50, 52, 54, 61, 63, 67], "fbp": [0, 28, 34, 38, 56, 57], "featur": 40, "fft": [0, 12], "field": 61, "fienup": 1, "fig": [27, 39], "figur": [27, 39], "file": [16, 17, 22, 23, 26, 28, 46, 47, 48, 49, 50, 51, 71], "filenam": [0, 16, 22, 23, 26, 28, 46, 47, 51], "filnam": 23, "filter": [0, 15, 28, 30, 34, 56, 66], "filter_nam": [0, 66], "filter_stack": [0, 66], "first": [6, 31, 36], "fit": 40, "float": [0, 4, 5, 6, 15, 25, 27, 30, 33, 34, 36, 37, 38, 40, 41, 47, 50, 52, 56, 58, 59, 61, 66], "folder": 71, "follow": 71, "forg": 71, "form": 52, "format": 47, "forster": 64, "forward": 33, "four": 54, "fourier": [0, 66], "fp": [16, 22, 26, 28], "fraction": 30, "frame": [0, 22, 48, 49, 68, 69], "free": [34, 56, 58], "frequenc": 66, "from": [0, 10, 11, 17, 20, 27, 28, 35, 38, 44, 45, 46, 47, 50, 51, 54, 58, 62, 63, 71], "full": 38, "function": [0, 11, 16, 18, 21, 26, 28, 40, 54, 63], "g": 54, "gaussian": [0, 41, 59, 61], "gaussiuan": 61, "gener": [54, 71], "geometri": [57, 58], "get": [0, 10], "get_best_slic": [0, 10], "get_catalyst_data": [0, 41], "get_com": [0, 11], "get_dart_boundari": [0, 55], "get_dm_tilt": [0, 45], "get_mrc_tilt": [0, 46], "get_n": 54, "get_needle_data": [0, 19, 20, 25, 30, 33, 34, 37, 40, 42], "get_radial_mask": [0, 67], "github": 71, "given": [0, 34, 52, 56, 65, 67, 68], "global": [1, 15, 40, 54, 70], "golden": [0, 65], "gpu": 33, "grai": [56, 58], "graph": 54, "gray_level": [34, 56, 58], "gray_val": [0, 53], "grayscal": [53, 60], "greatli": 71, "gui": 71, "guizar": 1, "ha": [17, 54], "hash": 54, "have": [7, 10, 29, 54, 71], "header": [0, 51], "height": 56, "hetergen": [0, 60], "high": 70, "highest": [7, 10], "hough": [15, 40], "http": [1, 64, 65, 70, 71], "hyperspi": [0, 16, 18, 33, 45, 46, 60, 62, 69, 71], "i": [1, 5, 6, 17, 25, 29, 33, 34, 37, 38, 40, 50, 52, 54, 56, 61, 63, 66, 67, 70, 71], "ideal": [14, 40], "identifi": 54, "ieee": 1, "imag": [1, 3, 6, 8, 9, 15, 22, 28, 30, 36, 39, 40, 49, 70], "imagej": 1, "implement": [1, 31], "import": [17, 19, 20, 25, 30, 33, 34, 37, 40, 54, 71], "impur": 54, "inc": 54, "includ": [29, 34, 40, 54, 71], "increment": [15, 28, 36, 40, 54], "index": 4, "indic": [0, 11, 27, 35, 39, 47, 54, 70], "influenc": 54, "inherit": 18, "initi": 16, "input": [0, 1, 3, 12, 14, 15, 19, 20, 25, 28, 30, 33, 37, 38, 40, 54, 56, 57, 58, 59, 63, 66, 70], "inspect": [28, 33, 38], "instanc": [16, 17, 26, 28, 44], "instead": [18, 54], "instrument": 71, "int": [0, 4, 7, 12, 14, 27, 33, 34, 37, 40, 41, 54, 56, 57, 58, 60, 61, 63, 68], "integ": [1, 5, 6, 10, 15, 20, 22, 30, 31, 33, 34, 35, 36, 37, 38, 40, 52, 56, 64, 65], "intens": [1, 20], "interact": 71, "intermedi": 54, "intern": 54, "interp_ord": 63, "interpol": [25, 63], "introduc": 70, "invert": [16, 19, 26, 28], "invok": 54, "io": [0, 43, 44, 45, 46, 47, 48, 49, 50, 51], "ipykernel": 71, "ipympl": 71, "ipython": 71, "ipywidget": 71, "isig": 34, "isinst": 54, "item": 17, "iter": [0, 4, 5, 28, 33, 34, 37, 38, 52, 54, 56, 57, 58], "j": [58, 64], "jame": 1, "januari": 1, "jitter": 63, "k": 58, "kaestner": 65, "kei": [34, 40, 54], "kernel": 71, "keyword": [34, 40, 54], "know": 54, "kwarg": [1, 16, 17, 21, 26, 28, 32, 34, 37, 40], "lab": 71, "lambda": 54, "larg": 54, "later": [1, 5], "lazi": 54, "lazili": 54, "least": 1, "length": 54, "less": [5, 6, 37], "letter": 1, "level": [16, 19, 20, 26, 28, 56, 58, 70], "levi": 64, "librari": 71, "like": 54, "limit": [0, 15, 22, 40, 56, 63], "line": [0, 1, 4, 5, 12, 15, 37, 40], "linear": [25, 40], "link": 71, "list": [14, 17, 35, 38, 39, 40, 47, 49, 52, 53, 54, 56, 58, 67], "littl": 71, "load": [0, 41, 42, 47, 48, 49, 71], "load_serialem": [0, 48], "load_serialem_seri": [0, 49], "loc": [10, 40], "locat": [0, 7, 10, 11, 12, 14, 33, 37, 40, 67], "logan": [0, 56, 66], "logic": 67, "look": 54, "low": 70, "lower": [22, 41, 60], "m": [1, 71], "made": 71, "magic": 54, "mai": 54, "major": 71, "make": [14, 54], "mandatori": 17, "mani": 54, "manual": [28, 31], "manual_align": [28, 31], "manuel": 1, "mask": [0, 67], "mask_shap": [0, 67], "mass": [0, 1, 5, 6, 7, 10, 11, 14, 37, 40, 70], "match": [0, 43], "matlab": 1, "matplotlib": [22, 27, 39], "max": 34, "max_shift": 63, "maxim": 37, "maximag": 40, "maximum": [15, 20, 40, 63], "maxshift": 41, "mdoc": [0, 47, 50], "mdoc_fil": [0, 48, 49, 50], "mdocfil": [0, 48, 49], "mean": [20, 27, 30, 38, 54], "median": [28, 30], "medium": [0, 70], "memori": [0, 44], "metadata": [1, 5, 17, 23, 45, 48, 49, 50], "method": [1, 4, 5, 6, 28, 30, 34, 37, 38, 40, 52, 54, 56, 70, 71], "miao": 64, "middl": 4, "midpoint": [5, 37], "might": 17, "mimic": [0, 60, 61], "min_shift": 63, "minim": [1, 15, 40], "minimum": [38, 63], "minshift": 41, "misalign": [0, 41, 59, 63], "misalign_stack": [0, 63], "mismatchedtilterror": [0, 43], "mode": 25, "model": [0, 41, 59, 60, 61, 62, 63], "modifi": 54, "more": [17, 54, 71], "motion": 40, "motiv": [1, 70], "movi": [16, 22, 26, 28], "mrc": [0, 46, 47, 48, 49, 51, 71], "mrc_file": [48, 49], "mrcfile": [0, 48, 49], "mul": 54, "multi": [0, 48, 49, 68, 69], "multiaverag": [0, 68], "multipl": 50, "multiscan": 50, "multithread": 56, "munch": 65, "must": [2, 6, 22, 25, 29, 30, 33, 34, 37, 38, 40, 41, 52, 54, 56, 59, 63], "mylist": 54, "n": [54, 71], "name": [0, 23, 46, 47, 50, 51, 54, 71], "nangl": [0, 57, 58, 65], "natur": 1, "nature10934": 1, "navig": [16, 21, 26, 28], "ncore": 56, "ncpu": [0, 69], "ndarrai": [0, 17, 44, 45, 46, 47, 49, 50, 56], "ndimag": 63, "nearest": [6, 25], "need": 54, "needl": [0, 42, 61], "neg": 33, "neighborhood": 30, "new": 71, "nframe": [0, 68, 69], "niter": [0, 56], "nois": [41, 59], "noise_factor": 41, "noise_typ": [0, 59], "noisi": 59, "non": [33, 41, 54], "none": [0, 1, 6, 7, 14, 16, 17, 22, 23, 25, 26, 27, 28, 33, 34, 35, 37, 38, 39, 44, 46, 47, 54, 56, 62, 67], "normal": [16, 20, 26, 28], "not_a_real_method": 54, "note": [16, 25], "notebook": 71, "noth": 17, "nout": 54, "np": [45, 49, 50], "np_type": 46, "nparticl": [0, 60], "nslice": [0, 6, 10, 11, 14, 28, 31, 33, 37, 40], "ntilt": [11, 44, 69], "nubmer": 14, "num_point": [0, 64], "number": [0, 4, 5, 6, 10, 20, 22, 25, 27, 28, 31, 33, 34, 37, 38, 39, 40, 41, 43, 52, 54, 56, 57, 58, 60, 63, 64, 65, 68], "numpi": [1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 14, 15, 17, 52, 53, 55, 56, 57, 58, 62, 64, 65, 67, 68], "nx": [0, 44, 68, 69], "ny": [0, 44, 57, 58, 68, 69], "nyquist": 66, "o": [64, 71], "obj": [0, 54], "object": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 19, 20, 25, 26, 28, 29, 30, 34, 37, 40, 42, 47, 52, 54, 56, 59, 61, 62, 69, 70], "offset": [41, 63], "often": 71, "ol": 1, "one": [1, 28, 29, 30, 31, 34], "onli": [34, 37, 41, 54, 63], "oper": 54, "opt": 65, "optic": 1, "optimum": [28, 33], "option": [1, 17, 23, 37, 40, 44, 46, 47, 54, 70], "order": [60, 63], "org": [1, 64, 65, 70, 71], "orient": [28, 32], "origin": [17, 50], "original_metadata": 17, "other": [0, 2, 5, 13, 28, 29, 31, 37, 54, 70], "otherwis": [50, 52, 54, 56], "out": [1, 2, 13, 14, 25, 29, 34, 37, 40], "out1": 54, "out2": 54, "outfil": 22, "output": [22, 28, 34, 38, 39, 52, 54, 56], "outsid": 67, "over": [54, 65, 71], "overrid": 54, "oversampl": 64, "overwrit": 17, "p": [0, 1, 7, 34, 56, 58, 65], "pad": [0, 7, 12, 30], "pad_lin": [0, 12], "paddeds": [0, 12], "pair": [16, 23, 26, 28], "parallel": [0, 1, 4, 5, 7], "paramet": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 20, 22, 23, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70], "pars": [0, 50, 51], "parse_mdoc": [0, 50], "parse_mrc_head": [0, 51], "particl": 60, "particle_dens": 60, "pass": 54, "path": [0, 14, 16, 23, 26, 28, 46, 47, 48, 49, 50, 51], "pc": [1, 28, 37, 40], "per": [22, 68], "percentag": 41, "perform": [0, 5, 7, 14, 15, 33, 37, 40, 52, 56], "peripheri": 61, "perpendicular": [0, 1, 5, 6, 15, 70], "phase": [0, 1, 8, 37], "phy": 64, "physic": [1, 70], "physrevb": 64, "pixel": [4, 25, 31, 34, 37, 38, 41, 56, 58, 60, 63, 68], "plane": 25, "plot": [15, 16, 21, 26, 27, 28, 32, 40, 71], "plot_result": [15, 40], "plot_sino": [28, 32], "plot_slic": [26, 27], "plugin": 1, "point": [1, 37, 64], "poissonian": 59, "port": 1, "portion": [28, 31], "posit": [0, 1, 31, 34, 37, 38, 67], "possibl": [34, 40], "pp": [1, 70], "practic": 58, "pre": 71, "prequisit": 71, "present": 46, "previous": [0, 2, 13, 29], "primari": [2, 71], "print": [16, 24, 26, 28, 54], "prior": [28, 38, 39], "probabl": [34, 56, 58], "process": [1, 71], "produc": [0, 54], "progress": [1, 34, 37, 56], "proj_geom": [0, 57, 58], "project": [1, 4, 6, 15, 22, 28, 33, 34, 35, 37, 38, 39, 40, 41, 47, 52, 57, 58, 62, 66], "prompt": 22, "properti": 54, "provid": [4, 5, 37, 44, 54, 65, 71], "proxi": 54, "pseudo": 58, "publish": 58, "pure": 54, "puriti": 54, "py": 63, "pyramid": 1, "pystackreg": [0, 1, 6, 9], "python": [1, 54, 71], "qualiti": 37, "r": 1, "radial": [0, 67], "radiu": [0, 60, 61], "rag": 17, "random": [41, 54], "randomli": 54, "rang": [0, 7, 40, 63, 65], "rate": 66, "ratio": [0, 6, 7, 10, 37, 65], "raw": [16, 23, 26, 28], "re": 54, "read": [0, 47, 50, 51], "rec": [0, 34, 52, 53, 56], "rec_stack": 33, "receiv": 23, "recon": [0, 52, 53, 54, 55, 56, 57, 58], "recon_error": [28, 33], "reconstruct": [15, 26, 27, 28, 33, 34, 38, 40, 52, 53, 55, 56, 57, 58, 64, 71], "recstack": [0, 26, 27], "reduc": 70, "refer": [4, 5, 37], "refin": 6, "reg": [5, 40, 69], "regcom": 37, "regcomcl": 37, "region": [53, 67], "regist": [0, 1, 2, 6, 28, 37, 68, 69, 71], "register_serialem_stack": [0, 69], "registr": [0, 1, 5, 29, 37, 40], "regpc": 37, "regsr": 37, "rel": 31, "releas": 71, "remov": [28, 35], "remove_project": [28, 35], "reoncsturct": [0, 58], "requir": 71, "resolut": [1, 5, 22, 37], "resourc": 71, "respect": [28, 31, 54], "result": [18, 29, 31, 39, 40, 47, 49, 54, 66, 67, 69], "return": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 19, 20, 25, 27, 29, 30, 33, 34, 35, 37, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70], "rev": 64, "rigid": 1, "rotat": [14, 15, 25, 38, 40, 41, 63], "row": 67, "rpl": [16, 23, 26, 28], "run": [0, 56, 57, 58, 71], "run_alg": [0, 57], "run_dart": [0, 58], "runtim": 54, "ruttimann": 1, "s40679": [1, 70], "s_invert": 19, "s_new": 35, "s_normal": 20, "same": [2, 29, 54], "sampl": [0, 61, 65, 66], "samuel": 1, "sander": [1, 70], "sart": [0, 33, 34, 38, 52, 56, 57, 58], "save": [16, 22, 23, 26, 28], "save_movi": [16, 22, 26, 28], "save_raw": [16, 23, 26, 28], "scale": [27, 38], "scale_factor": 59, "scan": [50, 64], "scikit": 1, "scipi": 63, "scott": 1, "search": 40, "second": [22, 31, 61], "see": [17, 37, 54, 64, 65, 71], "segment": [0, 53, 55], "select": [10, 71], "self": [29, 35, 54], "seri": [0, 1, 3, 5, 6, 7, 8, 9, 10, 11, 14, 15, 28, 29, 34, 35, 37, 41, 42, 44, 48, 49, 50, 52, 56, 59, 61, 62, 63, 66, 68, 69, 71], "serialem": [0, 47, 48, 49, 50, 68, 69], "set": [16, 17, 20, 21, 26, 28, 34, 54, 56], "set_tilt": [28, 36], "sever": [28, 30], "shape": [0, 42, 57, 58, 60, 61, 67, 68, 69], "share": 54, "shepp": [0, 56, 66], "shift": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 13, 15, 25, 28, 29, 31, 38, 40, 41, 63], "shift_crop": [0, 13], "shift_limit": [15, 40], "shot": 59, "should": [5, 37, 54, 71], "show": [34, 39, 56], "show_progressbar": [0, 1, 8, 9, 28, 34, 37, 40, 56], "sicairo": 1, "sigma": 61, "signal": [17, 33, 43, 45, 46, 62, 69, 71], "signal1d": 33, "signal2d": [0, 16, 18, 33, 44, 45, 46, 60, 61, 62, 69], "sijber": 58, "simluat": [59, 63], "simpl": 71, "simplifi": 71, "simul": [41, 42, 59, 60, 61, 62, 63, 71], "simultan": 34, "singl": 50, "sino": [0, 57, 58], "sino_filt": 34, "sinogram": [0, 28, 32, 33, 52, 57, 58, 66], "sirt": [0, 28, 33, 34, 38, 52, 56, 57], "size": [2, 12, 28, 29, 30, 34, 38, 60, 61], "size_interv": 60, "skimag": [16, 25, 26, 28], "slice": [0, 5, 6, 7, 10, 11, 14, 26, 27, 28, 31, 34, 37, 38, 40], "slider": [16, 21, 26, 28], "slope": [0, 64], "so": 71, "sobel": [15, 30], "some": [17, 71], "sourc": 1, "spatial": [0, 1, 2, 5, 28, 29, 37], "specifi": 23, "specimen": [0, 14, 42, 47], "spline": 63, "squar": [1, 33], "stack": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 30, 31, 33, 34, 36, 37, 38, 40, 41, 44, 46, 47, 48, 49, 56, 59, 63, 66, 68, 69, 70, 71], "stack_regist": [28, 37, 40], "stackreg": [1, 37], "stackw": 70, "standard": [20, 27, 38], "start": [0, 1, 8, 9, 16, 22, 26, 28, 36, 37], "stat": [16, 24, 26, 28], "state": 54, "statu": 71, "stem": 71, "step": [0, 53, 55], "still": [54, 71], "stop": [16, 22, 26, 28], "store": [1, 5, 17], "str": [0, 16, 23, 25, 26, 28, 33, 34, 38, 46, 47, 48, 49, 50, 51, 52, 56, 59, 70], "string": [1, 22, 23, 30, 34, 37, 40, 56, 66, 70], "structur": [1, 70], "sub": 4, "subpixel": [1, 5, 37], "subsequ": 54, "suer": 14, "sum": [15, 33, 40], "support": [54, 60], "support_dens": 60, "support_radiu": 60, "sure": 54, "t": [1, 54, 70], "tag": [0, 45], "taper": [28, 30], "target": 1, "task": 54, "techniqu": [0, 34, 58], "tem": 71, "termin": [16, 24, 26, 28, 33], "test": [28, 39, 61], "test_align": [28, 38], "test_correl": [28, 39], "than": [5, 6, 37], "thei": [16, 29, 54], "them": 54, "theta": 65, "thevenaz": 1, "thi": [1, 5, 29, 37, 54, 61, 70], "thick": [34, 38, 56], "thing": 71, "third": 61, "three": [1, 26, 27, 28, 38, 40, 54], "thresh": [33, 34, 38, 52, 56], "threshold": [0, 53, 58], "through": 54, "thrown": 54, "thurman": 1, "tilt": [0, 1, 4, 5, 6, 7, 10, 11, 14, 15, 28, 29, 35, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 56, 59, 61, 62, 63, 65, 68, 69, 70, 71], "tilt_align": [28, 40], "tilt_com": [0, 14], "tilt_maximag": [0, 15], "tilt_rang": [0, 65], "tilt_rot": [28, 38, 63], "tilt_shift": [28, 38, 63], "tiltrot": 41, "tiltseri": 71, "tiltshift": 41, "time": [54, 71], "tip": 58, "titl": [22, 25], "token": 54, "toler": 33, "tomograph": 53, "tomographi": [0, 1, 5, 16, 26, 28, 58, 64, 70], "tomostack": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 56, 59, 62, 63, 66, 69, 70], "tool": 71, "toolbox": [0, 52, 71], "top": 22, "total": [7, 10], "track": [0, 1, 14, 37, 40], "trans_stack": [16, 25, 26, 28], "transact": 1, "transform": [15, 16, 25, 26, 28, 40], "translat": [1, 14], "travers": 54, "treatment": [0, 12], "trtik": 65, "true": [0, 15, 31, 33, 34, 37, 38, 40, 41, 50, 52, 54, 56, 61, 63, 67], "tupl": [0, 7, 22, 49, 50, 54, 60], "two": 39, "type": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 23, 25, 26, 27, 28, 29, 30, 34, 35, 37, 39, 40, 41, 42, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70], "typic": 17, "u": 1, "ui": 22, "underli": 54, "uninstal": 71, "union": 50, "uniqu": 54, "unless": 16, "unpack": 54, "unser": 1, "unset": 54, "until": 54, "up": 54, "upper": [22, 41, 60], "upsample_factor": 8, "us": [0, 1, 2, 4, 5, 6, 7, 8, 9, 11, 14, 15, 16, 18, 22, 23, 25, 26, 27, 28, 29, 33, 34, 37, 38, 40, 47, 52, 54, 56, 57, 61, 63, 64, 66, 70], "use_cuda": 38, "user": 71, "usnistgov": 71, "util": [64, 65, 66, 67, 68, 69, 70, 71], "valid": 1, "valu": [5, 6, 16, 17, 33, 34, 37, 38, 49, 50, 51, 52, 53, 54, 56, 60, 61], "valueerror": [0, 43], "varianc": [7, 10], "version": [12, 15, 53, 66, 70], "vertic": [14, 41], "view": 61, "visual": [28, 33, 38], "vmax_std": [27, 38], "vmin_std": [27, 38], "vol": [1, 70], "vol_geom": [0, 57, 58], "vol_siz": 61, "volsiz": 60, "volum": [0, 34, 38, 56, 57, 58, 60, 61, 62], "wa": [2, 13], "wai": 54, "warn": 71, "weight": [0, 70], "weight_stack": [0, 70], "well": 54, "when": [0, 33, 43, 54, 70, 71], "where": 52, "whether": [17, 54], "which": [1, 2, 4, 5, 7, 10, 11, 13, 14, 18, 22, 25, 29, 31, 33, 34, 37, 38, 39, 41, 46, 52, 56, 63, 66], "whose": 17, "width": [16, 20, 26, 28], "window": [0, 70, 71], "without": [0, 12], "work": 54, "wrap": [0, 54], "www": 71, "x": [3, 6, 8, 9, 10, 25, 31, 40, 41, 52, 54, 60, 63, 67, 68], "xonli": 41, "xrang": 7, "xshift": [7, 16, 25, 26, 28, 31, 38], "xslice": [26, 27], "xy": [16, 22, 26, 28], "xz": 22, "y": [3, 6, 8, 9, 25, 31, 52, 60, 67, 68], "y_onli": 63, "yonli": 41, "you": [54, 71], "your": 54, "yshift": [4, 16, 25, 26, 28, 31], "yslice": [26, 27], "yz": 22, "z": [52, 60], "zslice": [26, 27], "\u00e5ngstr\u00f6m": 1}, "titles": ["Primary API", "etspy.align.align_stack", "etspy.align.align_to_other", "etspy.align.apply_shifts", "etspy.align.calc_shifts_cl", "etspy.align.calc_shifts_com_cl", "etspy.align.calculate_shifts_com", "etspy.align.calculate_shifts_conservation_of_mass", "etspy.align.calculate_shifts_pc", "etspy.align.calculate_shifts_stackreg", "etspy.align.get_best_slices", "etspy.align.get_coms", "etspy.align.pad_line", "etspy.align.shift_crop", "etspy.align.tilt_com", "etspy.align.tilt_maximage", "etspy.base.CommonStack", "etspy.base.CommonStack.__init__", "etspy.base.CommonStack.change_data_type", "etspy.base.CommonStack.invert", "etspy.base.CommonStack.normalize", "etspy.base.CommonStack.plot", "etspy.base.CommonStack.save_movie", "etspy.base.CommonStack.save_raw", "etspy.base.CommonStack.stats", "etspy.base.CommonStack.trans_stack", "etspy.base.RecStack", "etspy.base.RecStack.plot_slices", "etspy.base.TomoStack", "etspy.base.TomoStack.align_other", "etspy.base.TomoStack.filter", "etspy.base.TomoStack.manual_align", "etspy.base.TomoStack.plot_sinos", "etspy.base.TomoStack.recon_error", "etspy.base.TomoStack.reconstruct", "etspy.base.TomoStack.remove_projections", "etspy.base.TomoStack.set_tilts", "etspy.base.TomoStack.stack_register", "etspy.base.TomoStack.test_align", "etspy.base.TomoStack.test_correlation", "etspy.base.TomoStack.tilt_align", "etspy.datasets.get_catalyst_data", "etspy.datasets.get_needle_data", "etspy.io.MismatchedTiltError", "etspy.io.create_stack", "etspy.io.get_dm_tilts", "etspy.io.get_mrc_tilts", "etspy.io.load", "etspy.io.load_serialem", "etspy.io.load_serialem_series", "etspy.io.parse_mdoc", "etspy.io.parse_mrc_header", "etspy.recon.astra_error", "etspy.recon.dart_segment", "etspy.recon.dask_delayed", "etspy.recon.get_dart_boundaries", "etspy.recon.run", "etspy.recon.run_alg", "etspy.recon.run_dart", "etspy.simulation.add_noise", "etspy.simulation.create_catalyst_model", "etspy.simulation.create_cylinder_model", "etspy.simulation.create_model_tilt_series", "etspy.simulation.misalign_stack", "etspy.utils.calc_est_angles", "etspy.utils.calc_golden_ratio_angles", "etspy.utils.filter_stack", "etspy.utils.get_radial_mask", "etspy.utils.multiaverage", "etspy.utils.register_serialem_stack", "etspy.utils.weight_stack", "ETSpy package"], "titleterms": {"align": 0, "anaconda": 71, "api": [0, 71], "basic": 71, "compon": 71, "constructor": [16, 26, 28], "data": 0, "dataset": 0, "depend": 71, "difficult": 71, "document": 71, "etspi": 71, "exampl": 0, "file": 0, "higli": 71, "i": 0, "instal": 71, "jupyt": 71, "mai": 71, "method": 0, "note": 54, "o": 0, "option": 71, "packag": 71, "pip": 71, "prefer": 71, "primari": 0, "project": 71, "recommend": 71, "reconstruct": 0, "refer": 71, "relat": 71, "remov": 71, "signal": [0, 16, 26, 28], "simul": 0, "system": 71, "us": 71, "usag": 71, "util": 0, "your": 71}})